const {
  h,
  Component
} = preact;
import Tracks from './Tracks.js';
import Paging from './Paging.js';
import Scrobbler from '../services/scrobbler.js';
const scrobbler = new Scrobbler('philmau', 'ccfce33b35f8480c2413f2a642fa2c6a');

class App extends Component {
  constructor() {
    super();
    this.state = {
      page: 1,
      total: 0,
      perPage: 10,
      totalPages: 0,
      tracks: Array.apply({}, Array(10))
    };
  }

  componentWillMount() {
    this.fetchTracks();
  }

  handlePaging(page) {
    this.setState({
      page: page,
      tracks: Array.apply({}, Array(this.state.perPage))
    }, this.fetchTracks);
  }

  fetchTracks() {
    scrobbler.getRecentTracks(this.state.perPage, this.state.page).then(data => {
      let attr = data.recenttracks['@attr'];
      this.setState({
        page: parseInt(attr.page),
        total: parseInt(attr.total),
        perPage: parseInt(attr.perPage),
        totalPages: parseInt(attr.totalPages),
        tracks: data.recenttracks.track
      });
    });
  }

  render(props, {
    tracks,
    page,
    total,
    perPage,
    totalPages
  }) {
    return h("div", {
      class: "App"
    }, h(Paging, {
      page: page,
      totalPages: totalPages,
      onPage: this.handlePaging.bind(this)
    }), h("main", {
      class: "App-main"
    }, h(Tracks, {
      tracks: tracks.slice(0, this.state.perPage),
      page: page
    })));
  }

}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvQXBwLmpzIl0sIm5hbWVzIjpbImgiLCJDb21wb25lbnQiLCJwcmVhY3QiLCJUcmFja3MiLCJQYWdpbmciLCJTY3JvYmJsZXIiLCJzY3JvYmJsZXIiLCJBcHAiLCJjb25zdHJ1Y3RvciIsInN0YXRlIiwicGFnZSIsInRvdGFsIiwicGVyUGFnZSIsInRvdGFsUGFnZXMiLCJ0cmFja3MiLCJBcnJheSIsImFwcGx5IiwiY29tcG9uZW50V2lsbE1vdW50IiwiZmV0Y2hUcmFja3MiLCJoYW5kbGVQYWdpbmciLCJzZXRTdGF0ZSIsImdldFJlY2VudFRyYWNrcyIsInRoZW4iLCJkYXRhIiwiYXR0ciIsInJlY2VudHRyYWNrcyIsInBhcnNlSW50IiwidHJhY2siLCJyZW5kZXIiLCJwcm9wcyIsImJpbmQiLCJzbGljZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBbUJDLE1BQXpCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsYUFBbkI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLDBCQUF0QjtBQUNBLE1BQU1DLFNBQVMsR0FBRyxJQUFJRCxTQUFKLENBQWMsU0FBZCxFQUF5QixrQ0FBekIsQ0FBbEI7O0FBRUEsTUFBTUUsR0FBTixTQUFrQk4sU0FBbEIsQ0FBNEI7QUFDM0JPLEVBQUFBLFdBQVcsR0FBRztBQUNiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1pDLE1BQUFBLElBQUksRUFBRSxDQURNO0FBRVpDLE1BQUFBLEtBQUssRUFBRSxDQUZLO0FBR1pDLE1BQUFBLE9BQU8sRUFBRSxFQUhHO0FBSVpDLE1BQUFBLFVBQVUsRUFBRSxDQUpBO0FBS1pDLE1BQUFBLE1BQU0sRUFBRUMsS0FBSyxDQUFDQyxLQUFOLENBQVksRUFBWixFQUFnQkQsS0FBSyxDQUFDLEVBQUQsQ0FBckI7QUFMSSxLQUFiO0FBT0E7O0FBRURFLEVBQUFBLGtCQUFrQixHQUFHO0FBQ3BCLFNBQUtDLFdBQUw7QUFDQTs7QUFFREMsRUFBQUEsWUFBWSxDQUFDVCxJQUFELEVBQU87QUFDbEIsU0FBS1UsUUFBTCxDQUNDO0FBQ0NWLE1BQUFBLElBQUksRUFBRUEsSUFEUDtBQUVDSSxNQUFBQSxNQUFNLEVBQUVDLEtBQUssQ0FBQ0MsS0FBTixDQUFZLEVBQVosRUFBZ0JELEtBQUssQ0FBQyxLQUFLTixLQUFMLENBQVdHLE9BQVosQ0FBckI7QUFGVCxLQURELEVBS0MsS0FBS00sV0FMTjtBQU9BOztBQUVEQSxFQUFBQSxXQUFXLEdBQUc7QUFDYlosSUFBQUEsU0FBUyxDQUFDZSxlQUFWLENBQTBCLEtBQUtaLEtBQUwsQ0FBV0csT0FBckMsRUFBOEMsS0FBS0gsS0FBTCxDQUFXQyxJQUF6RCxFQUErRFksSUFBL0QsQ0FBb0VDLElBQUksSUFBSTtBQUMzRSxVQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0UsWUFBTCxDQUFrQixPQUFsQixDQUFYO0FBQ0EsV0FBS0wsUUFBTCxDQUFjO0FBQ2JWLFFBQUFBLElBQUksRUFBRWdCLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDZCxJQUFOLENBREQ7QUFFYkMsUUFBQUEsS0FBSyxFQUFFZSxRQUFRLENBQUNGLElBQUksQ0FBQ2IsS0FBTixDQUZGO0FBR2JDLFFBQUFBLE9BQU8sRUFBRWMsUUFBUSxDQUFDRixJQUFJLENBQUNaLE9BQU4sQ0FISjtBQUliQyxRQUFBQSxVQUFVLEVBQUVhLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDWCxVQUFOLENBSlA7QUFLYkMsUUFBQUEsTUFBTSxFQUFFUyxJQUFJLENBQUNFLFlBQUwsQ0FBa0JFO0FBTGIsT0FBZDtBQU9BLEtBVEQ7QUFVQTs7QUFFREMsRUFBQUEsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFBRWYsSUFBQUEsTUFBRjtBQUFVSixJQUFBQSxJQUFWO0FBQWdCQyxJQUFBQSxLQUFoQjtBQUF1QkMsSUFBQUEsT0FBdkI7QUFBZ0NDLElBQUFBO0FBQWhDLEdBQVIsRUFBc0Q7QUFDM0QsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQyxFQUFDLE1BQUQ7QUFBUSxNQUFBLElBQUksRUFBRUgsSUFBZDtBQUFvQixNQUFBLFVBQVUsRUFBRUcsVUFBaEM7QUFBNEMsTUFBQSxNQUFNLEVBQUUsS0FBS00sWUFBTCxDQUFrQlcsSUFBbEIsQ0FBdUIsSUFBdkI7QUFBcEQsTUFERCxFQUVDO0FBQU0sTUFBQSxLQUFLLEVBQUM7QUFBWixPQUNDLEVBQUMsTUFBRDtBQUFRLE1BQUEsTUFBTSxFQUFFaEIsTUFBTSxDQUFDaUIsS0FBUCxDQUFhLENBQWIsRUFBZ0IsS0FBS3RCLEtBQUwsQ0FBV0csT0FBM0IsQ0FBaEI7QUFBcUQsTUFBQSxJQUFJLEVBQUVGO0FBQTNELE1BREQsQ0FGRCxDQUREO0FBUUE7O0FBaEQwQjs7QUFtRDVCLGVBQWVILEdBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGgsIENvbXBvbmVudCB9ID0gcHJlYWN0O1xuaW1wb3J0IFRyYWNrcyBmcm9tICcuL1RyYWNrcy5qcyc7XG5pbXBvcnQgUGFnaW5nIGZyb20gJy4vUGFnaW5nLmpzJztcbmltcG9ydCBTY3JvYmJsZXIgZnJvbSAnLi4vc2VydmljZXMvc2Nyb2JibGVyLmpzJztcbmNvbnN0IHNjcm9iYmxlciA9IG5ldyBTY3JvYmJsZXIoJ3BoaWxtYXUnLCAnY2NmY2UzM2IzNWY4NDgwYzI0MTNmMmE2NDJmYTJjNmEnKTtcblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoKTtcblx0XHR0aGlzLnN0YXRlID0ge1xuXHRcdFx0cGFnZTogMSxcblx0XHRcdHRvdGFsOiAwLFxuXHRcdFx0cGVyUGFnZTogMTAsXG5cdFx0XHR0b3RhbFBhZ2VzOiAwLFxuXHRcdFx0dHJhY2tzOiBBcnJheS5hcHBseSh7fSwgQXJyYXkoMTApKVxuXHRcdH07XG5cdH1cblxuXHRjb21wb25lbnRXaWxsTW91bnQoKSB7XG5cdFx0dGhpcy5mZXRjaFRyYWNrcygpO1xuXHR9XG5cblx0aGFuZGxlUGFnaW5nKHBhZ2UpIHtcblx0XHR0aGlzLnNldFN0YXRlKFxuXHRcdFx0e1xuXHRcdFx0XHRwYWdlOiBwYWdlLFxuXHRcdFx0XHR0cmFja3M6IEFycmF5LmFwcGx5KHt9LCBBcnJheSh0aGlzLnN0YXRlLnBlclBhZ2UpKVxuXHRcdFx0fSxcblx0XHRcdHRoaXMuZmV0Y2hUcmFja3Ncblx0XHQpO1xuXHR9XG5cblx0ZmV0Y2hUcmFja3MoKSB7XG5cdFx0c2Nyb2JibGVyLmdldFJlY2VudFRyYWNrcyh0aGlzLnN0YXRlLnBlclBhZ2UsIHRoaXMuc3RhdGUucGFnZSkudGhlbihkYXRhID0+IHtcblx0XHRcdGxldCBhdHRyID0gZGF0YS5yZWNlbnR0cmFja3NbJ0BhdHRyJ107XG5cdFx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdFx0cGFnZTogcGFyc2VJbnQoYXR0ci5wYWdlKSxcblx0XHRcdFx0dG90YWw6IHBhcnNlSW50KGF0dHIudG90YWwpLFxuXHRcdFx0XHRwZXJQYWdlOiBwYXJzZUludChhdHRyLnBlclBhZ2UpLFxuXHRcdFx0XHR0b3RhbFBhZ2VzOiBwYXJzZUludChhdHRyLnRvdGFsUGFnZXMpLFxuXHRcdFx0XHR0cmFja3M6IGRhdGEucmVjZW50dHJhY2tzLnRyYWNrXG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXG5cdHJlbmRlcihwcm9wcywgeyB0cmFja3MsIHBhZ2UsIHRvdGFsLCBwZXJQYWdlLCB0b3RhbFBhZ2VzIH0pIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBjbGFzcz1cIkFwcFwiPlxuXHRcdFx0XHQ8UGFnaW5nIHBhZ2U9e3BhZ2V9IHRvdGFsUGFnZXM9e3RvdGFsUGFnZXN9IG9uUGFnZT17dGhpcy5oYW5kbGVQYWdpbmcuYmluZCh0aGlzKX0gLz5cblx0XHRcdFx0PG1haW4gY2xhc3M9XCJBcHAtbWFpblwiPlxuXHRcdFx0XHRcdDxUcmFja3MgdHJhY2tzPXt0cmFja3Muc2xpY2UoMCwgdGhpcy5zdGF0ZS5wZXJQYWdlKX0gcGFnZT17cGFnZX0gLz5cblx0XHRcdFx0PC9tYWluPlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXSwiZmlsZSI6ImNvbXBvbmVudHMvQXBwLmpzIn0=