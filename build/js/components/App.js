const {
  h,
  Component
} = preact;
import Tracks from './Tracks.js';
import Paging from './Paging.js';
import Scrobbler from '../services/scrobbler.js';
const scrobbler = new Scrobbler('philmau', 'ccfce33b35f8480c2413f2a642fa2c6a');

class App extends Component {
  constructor() {
    super();
    this.state = {
      page: 1,
      total: 0,
      perPage: 10,
      totalPages: 0,
      tracks: []
    };
  }

  componentWillMount() {
    this.fetchTracks();
  }

  handlePaging(page) {
    this.setState({
      page: page,
      tracks: Array.apply({}, Array(this.state.perPage))
    }, this.fetchTracks);
  }

  fetchTracks() {
    scrobbler.getRecentTracks(this.state.perPage, this.state.page).then(data => {
      let attr = data.recenttracks['@attr'];
      this.setState({
        page: parseInt(attr.page),
        total: parseInt(attr.total),
        perPage: parseInt(attr.perPage),
        totalPages: parseInt(attr.totalPages),
        tracks: data.recenttracks.track
      });
    });
  }

  render(props, {
    tracks,
    page,
    total,
    perPage,
    totalPages
  }) {
    return h("div", {
      class: "App"
    }, h(Tracks, {
      tracks: tracks.slice(0, this.state.perPage),
      page: page
    }), h(Paging, {
      page: page,
      totalPages: totalPages,
      onPage: this.handlePaging.bind(this)
    }), h("button", {
      onClick: this.handlePaging.bind(this, this.state.page)
    }, "Refresh"));
  }

}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvQXBwLmpzIl0sIm5hbWVzIjpbImgiLCJDb21wb25lbnQiLCJwcmVhY3QiLCJUcmFja3MiLCJQYWdpbmciLCJTY3JvYmJsZXIiLCJzY3JvYmJsZXIiLCJBcHAiLCJjb25zdHJ1Y3RvciIsInN0YXRlIiwicGFnZSIsInRvdGFsIiwicGVyUGFnZSIsInRvdGFsUGFnZXMiLCJ0cmFja3MiLCJjb21wb25lbnRXaWxsTW91bnQiLCJmZXRjaFRyYWNrcyIsImhhbmRsZVBhZ2luZyIsInNldFN0YXRlIiwiQXJyYXkiLCJhcHBseSIsImdldFJlY2VudFRyYWNrcyIsInRoZW4iLCJkYXRhIiwiYXR0ciIsInJlY2VudHRyYWNrcyIsInBhcnNlSW50IiwidHJhY2siLCJyZW5kZXIiLCJwcm9wcyIsInNsaWNlIiwiYmluZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBbUJDLE1BQXpCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsYUFBbkI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLDBCQUF0QjtBQUNBLE1BQU1DLFNBQVMsR0FBRyxJQUFJRCxTQUFKLENBQWMsU0FBZCxFQUF5QixrQ0FBekIsQ0FBbEI7O0FBRUEsTUFBTUUsR0FBTixTQUFrQk4sU0FBbEIsQ0FBNEI7QUFDM0JPLEVBQUFBLFdBQVcsR0FBRztBQUNiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1pDLE1BQUFBLElBQUksRUFBRSxDQURNO0FBRVpDLE1BQUFBLEtBQUssRUFBRSxDQUZLO0FBR1pDLE1BQUFBLE9BQU8sRUFBRSxFQUhHO0FBSVpDLE1BQUFBLFVBQVUsRUFBRSxDQUpBO0FBS1pDLE1BQUFBLE1BQU0sRUFBRTtBQUxJLEtBQWI7QUFPQTs7QUFFREMsRUFBQUEsa0JBQWtCLEdBQUc7QUFDcEIsU0FBS0MsV0FBTDtBQUNBOztBQUVEQyxFQUFBQSxZQUFZLENBQUNQLElBQUQsRUFBTztBQUNsQixTQUFLUSxRQUFMLENBQ0M7QUFDQ1IsTUFBQUEsSUFBSSxFQUFFQSxJQURQO0FBRUNJLE1BQUFBLE1BQU0sRUFBRUssS0FBSyxDQUFDQyxLQUFOLENBQVksRUFBWixFQUFnQkQsS0FBSyxDQUFDLEtBQUtWLEtBQUwsQ0FBV0csT0FBWixDQUFyQjtBQUZULEtBREQsRUFLQyxLQUFLSSxXQUxOO0FBT0E7O0FBRURBLEVBQUFBLFdBQVcsR0FBRztBQUNiVixJQUFBQSxTQUFTLENBQUNlLGVBQVYsQ0FBMEIsS0FBS1osS0FBTCxDQUFXRyxPQUFyQyxFQUE4QyxLQUFLSCxLQUFMLENBQVdDLElBQXpELEVBQStEWSxJQUEvRCxDQUFvRUMsSUFBSSxJQUFJO0FBQzNFLFVBQUlDLElBQUksR0FBR0QsSUFBSSxDQUFDRSxZQUFMLENBQWtCLE9BQWxCLENBQVg7QUFDQSxXQUFLUCxRQUFMLENBQWM7QUFDYlIsUUFBQUEsSUFBSSxFQUFFZ0IsUUFBUSxDQUFDRixJQUFJLENBQUNkLElBQU4sQ0FERDtBQUViQyxRQUFBQSxLQUFLLEVBQUVlLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDYixLQUFOLENBRkY7QUFHYkMsUUFBQUEsT0FBTyxFQUFFYyxRQUFRLENBQUNGLElBQUksQ0FBQ1osT0FBTixDQUhKO0FBSWJDLFFBQUFBLFVBQVUsRUFBRWEsUUFBUSxDQUFDRixJQUFJLENBQUNYLFVBQU4sQ0FKUDtBQUtiQyxRQUFBQSxNQUFNLEVBQUVTLElBQUksQ0FBQ0UsWUFBTCxDQUFrQkU7QUFMYixPQUFkO0FBT0EsS0FURDtBQVVBOztBQUVEQyxFQUFBQSxNQUFNLENBQUNDLEtBQUQsRUFBUTtBQUFFZixJQUFBQSxNQUFGO0FBQVVKLElBQUFBLElBQVY7QUFBZ0JDLElBQUFBLEtBQWhCO0FBQXVCQyxJQUFBQSxPQUF2QjtBQUFnQ0MsSUFBQUE7QUFBaEMsR0FBUixFQUFzRDtBQUMzRCxXQUNDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDLEVBQUMsTUFBRDtBQUFRLE1BQUEsTUFBTSxFQUFFQyxNQUFNLENBQUNnQixLQUFQLENBQWEsQ0FBYixFQUFnQixLQUFLckIsS0FBTCxDQUFXRyxPQUEzQixDQUFoQjtBQUFxRCxNQUFBLElBQUksRUFBRUY7QUFBM0QsTUFERCxFQUVDLEVBQUMsTUFBRDtBQUFRLE1BQUEsSUFBSSxFQUFFQSxJQUFkO0FBQW9CLE1BQUEsVUFBVSxFQUFFRyxVQUFoQztBQUE0QyxNQUFBLE1BQU0sRUFBRSxLQUFLSSxZQUFMLENBQWtCYyxJQUFsQixDQUF1QixJQUF2QjtBQUFwRCxNQUZELEVBR0M7QUFBUSxNQUFBLE9BQU8sRUFBRSxLQUFLZCxZQUFMLENBQWtCYyxJQUFsQixDQUF1QixJQUF2QixFQUE2QixLQUFLdEIsS0FBTCxDQUFXQyxJQUF4QztBQUFqQixpQkFIRCxDQUREO0FBT0E7O0FBL0MwQjs7QUFrRDVCLGVBQWVILEdBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGgsIENvbXBvbmVudCB9ID0gcHJlYWN0O1xyXG5pbXBvcnQgVHJhY2tzIGZyb20gJy4vVHJhY2tzLmpzJztcclxuaW1wb3J0IFBhZ2luZyBmcm9tICcuL1BhZ2luZy5qcyc7XHJcbmltcG9ydCBTY3JvYmJsZXIgZnJvbSAnLi4vc2VydmljZXMvc2Nyb2JibGVyLmpzJztcclxuY29uc3Qgc2Nyb2JibGVyID0gbmV3IFNjcm9iYmxlcigncGhpbG1hdScsICdjY2ZjZTMzYjM1Zjg0ODBjMjQxM2YyYTY0MmZhMmM2YScpO1xyXG5cclxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblx0XHR0aGlzLnN0YXRlID0ge1xyXG5cdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHR0b3RhbDogMCxcclxuXHRcdFx0cGVyUGFnZTogMTAsXHJcblx0XHRcdHRvdGFsUGFnZXM6IDAsXHJcblx0XHRcdHRyYWNrczogW11cclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRjb21wb25lbnRXaWxsTW91bnQoKSB7XHJcblx0XHR0aGlzLmZldGNoVHJhY2tzKCk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVQYWdpbmcocGFnZSkge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZShcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHBhZ2U6IHBhZ2UsXHJcblx0XHRcdFx0dHJhY2tzOiBBcnJheS5hcHBseSh7fSwgQXJyYXkodGhpcy5zdGF0ZS5wZXJQYWdlKSlcclxuXHRcdFx0fSxcclxuXHRcdFx0dGhpcy5mZXRjaFRyYWNrc1xyXG5cdFx0KTtcclxuXHR9XHJcblxyXG5cdGZldGNoVHJhY2tzKCkge1xyXG5cdFx0c2Nyb2JibGVyLmdldFJlY2VudFRyYWNrcyh0aGlzLnN0YXRlLnBlclBhZ2UsIHRoaXMuc3RhdGUucGFnZSkudGhlbihkYXRhID0+IHtcclxuXHRcdFx0bGV0IGF0dHIgPSBkYXRhLnJlY2VudHRyYWNrc1snQGF0dHInXTtcclxuXHRcdFx0dGhpcy5zZXRTdGF0ZSh7XHJcblx0XHRcdFx0cGFnZTogcGFyc2VJbnQoYXR0ci5wYWdlKSxcclxuXHRcdFx0XHR0b3RhbDogcGFyc2VJbnQoYXR0ci50b3RhbCksXHJcblx0XHRcdFx0cGVyUGFnZTogcGFyc2VJbnQoYXR0ci5wZXJQYWdlKSxcclxuXHRcdFx0XHR0b3RhbFBhZ2VzOiBwYXJzZUludChhdHRyLnRvdGFsUGFnZXMpLFxyXG5cdFx0XHRcdHRyYWNrczogZGF0YS5yZWNlbnR0cmFja3MudHJhY2tcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcihwcm9wcywgeyB0cmFja3MsIHBhZ2UsIHRvdGFsLCBwZXJQYWdlLCB0b3RhbFBhZ2VzIH0pIHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgY2xhc3M9XCJBcHBcIj5cclxuXHRcdFx0XHQ8VHJhY2tzIHRyYWNrcz17dHJhY2tzLnNsaWNlKDAsIHRoaXMuc3RhdGUucGVyUGFnZSl9IHBhZ2U9e3BhZ2V9IC8+XHJcblx0XHRcdFx0PFBhZ2luZyBwYWdlPXtwYWdlfSB0b3RhbFBhZ2VzPXt0b3RhbFBhZ2VzfSBvblBhZ2U9e3RoaXMuaGFuZGxlUGFnaW5nLmJpbmQodGhpcyl9IC8+XHJcblx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmhhbmRsZVBhZ2luZy5iaW5kKHRoaXMsIHRoaXMuc3RhdGUucGFnZSl9PlJlZnJlc2g8L2J1dHRvbj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBwO1xyXG4iXSwiZmlsZSI6ImNvbXBvbmVudHMvQXBwLmpzIn0=