const {
  h,
  Component
} = preact;

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      date: moment.unix(track.date.uts)
    };
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let searchUri = `spotify:search:${track.artist}%20${track.name}`;
    return h("div", {
      class: "Track"
<<<<<<< HEAD
    }, h("div", {
      class: "Track-image"
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.date.fromNow())));
=======
    }, h("a", {
      href: searchUri,
      class: "Track-image",
      style: style
    }, h("img", {
      src: track.image
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-name"
    }, h("a", {
      href: searchUri
    }, track.name)), h("div", {
      class: "Track-artist"
    }, track.artist))));
>>>>>>> 8dc08cbb79b8f7c269e6ba58d7cb4b78e62a7c60
  }

}

export default Track;
<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsInByZWFjdCIsIlRyYWNrIiwicmVtYXBUcmFjayIsInRyYWNrIiwibmFtZSIsImFydGlzdCIsImFsYnVtIiwiaW1hZ2UiLCJmaW5kSW1hZ2UiLCJkYXRlIiwibW9tZW50IiwidW5peCIsInV0cyIsInRyYWNrSW1hZ2VzIiwicmV2ZXJzZSIsImZpbmQiLCJyZW5kZXIiLCJwcm9wcyIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwic2VhcmNoVXJpIiwiZnJvbU5vdyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBbUJDLE1BQXpCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JGLFNBQXBCLENBQThCO0FBQzdCRyxFQUFBQSxVQUFVLENBQUNDLEtBQUQsRUFBUTtBQUNqQixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUQsS0FBSyxDQUFDQyxJQUROO0FBRU5DLE1BQUFBLE1BQU0sRUFBRUYsS0FBSyxDQUFDRSxNQUFOLENBQWEsT0FBYixDQUZGO0FBR05DLE1BQUFBLEtBQUssRUFBRUgsS0FBSyxDQUFDRyxLQUFOLENBQVksT0FBWixDQUhEO0FBSU5DLE1BQUFBLEtBQUssRUFBRSxLQUFLQyxTQUFMLENBQWVMLEtBQUssQ0FBQ0ksS0FBckIsQ0FKRDtBQUtORSxNQUFBQSxJQUFJLEVBQUVDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUixLQUFLLENBQUNNLElBQU4sQ0FBV0csR0FBdkI7QUFMQSxLQUFQO0FBT0E7O0FBRURKLEVBQUFBLFNBQVMsQ0FBQ0ssV0FBRCxFQUFjO0FBQ3RCLFFBQUlOLEtBQUssR0FBR00sV0FBVyxDQUFDQyxPQUFaLEdBQXNCQyxJQUF0QixDQUEyQlIsS0FBSyxJQUFJQSxLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCLEVBQXRELENBQVo7QUFDQSxXQUFPQSxLQUFLLEdBQ1RBLEtBQUssQ0FBQyxPQUFELENBREksR0FFVCxxSkFGSDtBQUdBOztBQUVEUyxFQUFBQSxNQUFNLENBQUNDLEtBQUQsRUFBUTtBQUNiLFFBQUlkLEtBQUssR0FBRyxLQUFLRCxVQUFMLENBQWdCZSxLQUFLLENBQUNkLEtBQXRCLENBQVo7QUFDQSxRQUFJZSxLQUFLLEdBQUc7QUFBRUMsTUFBQUEsZUFBZSxFQUFFLFNBQVNoQixLQUFLLENBQUNJLEtBQWYsR0FBdUI7QUFBMUMsS0FBWjtBQUNBLFFBQUlhLFNBQVMsR0FBSSxrQkFBaUJqQixLQUFLLENBQUNFLE1BQU8sTUFBS0YsS0FBSyxDQUFDQyxJQUFLLEVBQS9EO0FBQ0EsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsR0FBRyxFQUFFRCxLQUFLLENBQUNJLEtBQWhCO0FBQXVCLE1BQUEsS0FBSyxFQUFDLEtBQTdCO0FBQW1DLE1BQUEsTUFBTSxFQUFDO0FBQTFDLE1BREQsQ0FERCxFQUlDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUksTUFBQSxLQUFLLEVBQUM7QUFBVixPQUF5QkosS0FBSyxDQUFDQyxJQUEvQixDQURELEVBRUM7QUFBRyxNQUFBLEtBQUssRUFBQztBQUFULE9BQXlCRCxLQUFLLENBQUNFLE1BQS9CLENBRkQsRUFHQztBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsT0FBMkJGLEtBQUssQ0FBQ00sSUFBTixDQUFXWSxPQUFYLEVBQTNCLENBSEQsQ0FKRCxDQUREO0FBWUE7O0FBbEM0Qjs7QUFxQzlCLGVBQWVwQixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBoLCBDb21wb25lbnQgfSA9IHByZWFjdDtcclxuXHJcbmNsYXNzIFRyYWNrIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHRyZW1hcFRyYWNrKHRyYWNrKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRuYW1lOiB0cmFjay5uYW1lLFxyXG5cdFx0XHRhcnRpc3Q6IHRyYWNrLmFydGlzdFsnI3RleHQnXSxcclxuXHRcdFx0YWxidW06IHRyYWNrLmFsYnVtWycjdGV4dCddLFxyXG5cdFx0XHRpbWFnZTogdGhpcy5maW5kSW1hZ2UodHJhY2suaW1hZ2UpLFxyXG5cdFx0XHRkYXRlOiBtb21lbnQudW5peCh0cmFjay5kYXRlLnV0cylcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRmaW5kSW1hZ2UodHJhY2tJbWFnZXMpIHtcclxuXHRcdGxldCBpbWFnZSA9IHRyYWNrSW1hZ2VzLnJldmVyc2UoKS5maW5kKGltYWdlID0+IGltYWdlWycjdGV4dCddICE9ICcnKTtcclxuXHRcdHJldHVybiBpbWFnZVxyXG5cdFx0XHQ/IGltYWdlWycjdGV4dCddXHJcblx0XHRcdDogJ2RhdGE6aW1hZ2Uvc3ZnK3htbDs8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiPjxyZWN0IGZpbGw9XCIjMzMzXCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCIgLz48L3N2Zz4nO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKHByb3BzKSB7XHJcblx0XHRsZXQgdHJhY2sgPSB0aGlzLnJlbWFwVHJhY2socHJvcHMudHJhY2spO1xyXG5cdFx0bGV0IHN0eWxlID0geyBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJyArIHRyYWNrLmltYWdlICsgJyknIH07XHJcblx0XHRsZXQgc2VhcmNoVXJpID0gYHNwb3RpZnk6c2VhcmNoOiR7dHJhY2suYXJ0aXN0fSUyMCR7dHJhY2submFtZX1gO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrXCI+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWltYWdlXCI+XHJcblx0XHRcdFx0XHQ8aW1nIHNyYz17dHJhY2suaW1hZ2V9IHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCIgLz5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW5mb1wiPlxyXG5cdFx0XHRcdFx0PGgyIGNsYXNzPVwiVHJhY2stdGl0bGVcIj57dHJhY2submFtZX08L2gyPlxyXG5cdFx0XHRcdFx0PHAgY2xhc3M9XCJUcmFjay1hcnRpc3RcIj57dHJhY2suYXJ0aXN0fTwvcD5cclxuXHRcdFx0XHRcdDxzbWFsbCBjbGFzcz1cIlRyYWNrLWRhdGVcIj57dHJhY2suZGF0ZS5mcm9tTm93KCl9PC9zbWFsbD5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHJhY2s7XHJcbiJdLCJmaWxlIjoiY29tcG9uZW50cy9UcmFjay5qcyJ9
=======
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsInByZWFjdCIsIlRyYWNrIiwicmVtYXBUcmFjayIsInRyYWNrIiwibmFtZSIsImFydGlzdCIsImFsYnVtIiwiaW1hZ2UiLCJmaW5kSW1hZ2UiLCJ0cmFja0ltYWdlcyIsInJldmVyc2UiLCJmaW5kIiwicmVuZGVyIiwicHJvcHMiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsInNlYXJjaFVyaSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBbUJDLE1BQXpCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JGLFNBQXBCLENBQThCO0FBQzdCRyxFQUFBQSxVQUFVLENBQUNDLEtBQUQsRUFBUTtBQUNqQixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUQsS0FBSyxDQUFDQyxJQUROO0FBRU5DLE1BQUFBLE1BQU0sRUFBRUYsS0FBSyxDQUFDRSxNQUFOLENBQWEsT0FBYixDQUZGO0FBR05DLE1BQUFBLEtBQUssRUFBRUgsS0FBSyxDQUFDRyxLQUFOLENBQVksT0FBWixDQUhEO0FBSU5DLE1BQUFBLEtBQUssRUFBRSxLQUFLQyxTQUFMLENBQWVMLEtBQUssQ0FBQ0ksS0FBckI7QUFKRCxLQUFQO0FBTUE7O0FBRURDLEVBQUFBLFNBQVMsQ0FBQ0MsV0FBRCxFQUFjO0FBQ3RCLFFBQUlGLEtBQUssR0FBR0UsV0FBVyxDQUFDQyxPQUFaLEdBQXNCQyxJQUF0QixDQUEyQkosS0FBSyxJQUFJQSxLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCLEVBQXRELENBQVo7QUFDQSxXQUFPQSxLQUFLLEdBQUdBLEtBQUssQ0FBQyxPQUFELENBQVIsR0FBb0IsNkJBQWhDO0FBQ0E7O0FBRURLLEVBQUFBLE1BQU0sQ0FBQ0MsS0FBRCxFQUFRO0FBQ2IsUUFBSVYsS0FBSyxHQUFHLEtBQUtELFVBQUwsQ0FBZ0JXLEtBQUssQ0FBQ1YsS0FBdEIsQ0FBWjtBQUNBLFFBQUlXLEtBQUssR0FBRztBQUFFQyxNQUFBQSxlQUFlLEVBQUUsU0FBU1osS0FBSyxDQUFDSSxLQUFmLEdBQXVCO0FBQTFDLEtBQVo7QUFDQSxRQUFJUyxTQUFTLEdBQUksa0JBQWlCYixLQUFLLENBQUNFLE1BQU8sTUFBS0YsS0FBSyxDQUFDQyxJQUFLLEVBQS9EO0FBQ0EsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFHLE1BQUEsSUFBSSxFQUFFWSxTQUFUO0FBQW9CLE1BQUEsS0FBSyxFQUFDLGFBQTFCO0FBQXdDLE1BQUEsS0FBSyxFQUFFRjtBQUEvQyxPQUNDO0FBQUssTUFBQSxHQUFHLEVBQUVYLEtBQUssQ0FBQ0k7QUFBaEIsTUFERCxDQURELEVBSUM7QUFBSyxNQUFBLEtBQUssRUFBQztBQUFYLE9BQ0M7QUFBSSxNQUFBLEtBQUssRUFBQztBQUFWLE9BQ0M7QUFBRyxNQUFBLElBQUksRUFBRVM7QUFBVCxPQUFxQmIsS0FBSyxDQUFDQyxJQUEzQixDQURELENBREQsRUFJQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FBMkJELEtBQUssQ0FBQ0UsTUFBakMsQ0FKRCxDQUpELENBREQsQ0FERDtBQWVBOztBQWxDNEI7O0FBcUM5QixlQUFlSixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBoLCBDb21wb25lbnQgfSA9IHByZWFjdDtcblxuY2xhc3MgVHJhY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRyZW1hcFRyYWNrKHRyYWNrKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdG5hbWU6IHRyYWNrLm5hbWUsXG5cdFx0XHRhcnRpc3Q6IHRyYWNrLmFydGlzdFsnI3RleHQnXSxcblx0XHRcdGFsYnVtOiB0cmFjay5hbGJ1bVsnI3RleHQnXSxcblx0XHRcdGltYWdlOiB0aGlzLmZpbmRJbWFnZSh0cmFjay5pbWFnZSlcblx0XHR9O1xuXHR9XG5cblx0ZmluZEltYWdlKHRyYWNrSW1hZ2VzKSB7XG5cdFx0bGV0IGltYWdlID0gdHJhY2tJbWFnZXMucmV2ZXJzZSgpLmZpbmQoaW1hZ2UgPT4gaW1hZ2VbJyN0ZXh0J10gIT0gJycpO1xuXHRcdHJldHVybiBpbWFnZSA/IGltYWdlWycjdGV4dCddIDogJ2h0dHBzOi8vdW5zcGxhc2guaXQvMzAwLzMwMCc7XG5cdH1cblxuXHRyZW5kZXIocHJvcHMpIHtcblx0XHRsZXQgdHJhY2sgPSB0aGlzLnJlbWFwVHJhY2socHJvcHMudHJhY2spO1xuXHRcdGxldCBzdHlsZSA9IHsgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0cmFjay5pbWFnZSArICcpJyB9O1xuXHRcdGxldCBzZWFyY2hVcmkgPSBgc3BvdGlmeTpzZWFyY2g6JHt0cmFjay5hcnRpc3R9JTIwJHt0cmFjay5uYW1lfWA7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3M9XCJUcmFjay1jb250YWluZXJcIj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrXCI+XG5cdFx0XHRcdFx0PGEgaHJlZj17c2VhcmNoVXJpfSBjbGFzcz1cIlRyYWNrLWltYWdlXCIgc3R5bGU9e3N0eWxlfT5cblx0XHRcdFx0XHRcdDxpbWcgc3JjPXt0cmFjay5pbWFnZX0gLz5cblx0XHRcdFx0XHQ8L2E+XG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWluZm9cIj5cblx0XHRcdFx0XHRcdDxoMiBjbGFzcz1cIlRyYWNrLW5hbWVcIj5cblx0XHRcdFx0XHRcdFx0PGEgaHJlZj17c2VhcmNoVXJpfT57dHJhY2submFtZX08L2E+XG5cdFx0XHRcdFx0XHQ8L2gyPlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWFydGlzdFwiPnt0cmFjay5hcnRpc3R9PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBUcmFjaztcbiJdLCJmaWxlIjoiY29tcG9uZW50cy9UcmFjay5qcyJ9
>>>>>>> 8dc08cbb79b8f7c269e6ba58d7cb4b78e62a7c60
