import { h, Component } from '../lib/preact.js';
import * as Icon from './Icons.js';

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      time: this.trackTime(track)
    };
  }

  trackTime(track) {
    let time = 'a while ago';

    if (track['@attr'] && track['@attr'].nowplaying) {
      time = 'now';
    }

    if (track.date) {
      time = moment.unix(track.date.uts).fromNow();
    }

    return time;
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let name = track.name.replace(/\s+/, '+');
    let artist = track.artist.replace(/\s+/, '+');
    let spotifyUri = `spotify:search:${artist}%20${name}`;
    let youtubeUri = `https://www.youtube.com/results?search_query=${artist}+-+${name}`;
    return h("div", {
      class: "Track"
    }, h("div", {
      class: "Track-image",
      style: style
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.time), h("a", {
      href: spotifyUri,
      class: "Track-search Track-search--spotify",
      target: "_blank",
      title: "Search for this track on Spotify"
    }, h(Icon.Spotify, null)), h("a", {
      href: youtubeUri,
      class: "Track-search Track-search--youtube",
      target: "_blank",
      title: "Search for this track on YouTube"
    }, h(Icon.Youtube, null))));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsIkljb24iLCJUcmFjayIsInJlbWFwVHJhY2siLCJ0cmFjayIsIm5hbWUiLCJhcnRpc3QiLCJhbGJ1bSIsImltYWdlIiwiZmluZEltYWdlIiwidGltZSIsInRyYWNrVGltZSIsIm5vd3BsYXlpbmciLCJkYXRlIiwibW9tZW50IiwidW5peCIsInV0cyIsImZyb21Ob3ciLCJ0cmFja0ltYWdlcyIsInJldmVyc2UiLCJmaW5kIiwicmVuZGVyIiwicHJvcHMiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsInJlcGxhY2UiLCJzcG90aWZ5VXJpIiwieW91dHViZVVyaSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsQ0FBVCxFQUFZQyxTQUFaLFFBQTZCLGtCQUE3QjtBQUNBLE9BQU8sS0FBS0MsSUFBWixNQUFzQixZQUF0Qjs7QUFFQSxNQUFNQyxLQUFOLFNBQW9CRixTQUFwQixDQUE4QjtBQUM3QkcsRUFBQUEsVUFBVSxDQUFDQyxLQUFELEVBQVE7QUFDakIsV0FBTztBQUNOQyxNQUFBQSxJQUFJLEVBQUVELEtBQUssQ0FBQ0MsSUFETjtBQUVOQyxNQUFBQSxNQUFNLEVBQUVGLEtBQUssQ0FBQ0UsTUFBTixDQUFhLE9BQWIsQ0FGRjtBQUdOQyxNQUFBQSxLQUFLLEVBQUVILEtBQUssQ0FBQ0csS0FBTixDQUFZLE9BQVosQ0FIRDtBQUlOQyxNQUFBQSxLQUFLLEVBQUUsS0FBS0MsU0FBTCxDQUFlTCxLQUFLLENBQUNJLEtBQXJCLENBSkQ7QUFLTkUsTUFBQUEsSUFBSSxFQUFFLEtBQUtDLFNBQUwsQ0FBZVAsS0FBZjtBQUxBLEtBQVA7QUFPQTs7QUFFRE8sRUFBQUEsU0FBUyxDQUFDUCxLQUFELEVBQVE7QUFDaEIsUUFBSU0sSUFBSSxHQUFHLGFBQVg7O0FBRUEsUUFBSU4sS0FBSyxDQUFDLE9BQUQsQ0FBTCxJQUFrQkEsS0FBSyxDQUFDLE9BQUQsQ0FBTCxDQUFlUSxVQUFyQyxFQUFpRDtBQUNoREYsTUFBQUEsSUFBSSxHQUFHLEtBQVA7QUFDQTs7QUFFRCxRQUFJTixLQUFLLENBQUNTLElBQVYsRUFBZ0I7QUFDZkgsTUFBQUEsSUFBSSxHQUFHSSxNQUFNLENBQUNDLElBQVAsQ0FBWVgsS0FBSyxDQUFDUyxJQUFOLENBQVdHLEdBQXZCLEVBQTRCQyxPQUE1QixFQUFQO0FBQ0E7O0FBRUQsV0FBT1AsSUFBUDtBQUNBOztBQUVERCxFQUFBQSxTQUFTLENBQUNTLFdBQUQsRUFBYztBQUN0QixRQUFJVixLQUFLLEdBQUdVLFdBQVcsQ0FBQ0MsT0FBWixHQUFzQkMsSUFBdEIsQ0FBMkJaLEtBQUssSUFBSUEsS0FBSyxDQUFDLE9BQUQsQ0FBTCxJQUFrQixFQUF0RCxDQUFaO0FBQ0EsV0FBT0EsS0FBSyxHQUNUQSxLQUFLLENBQUMsT0FBRCxDQURJLEdBRVQscUpBRkg7QUFHQTs7QUFFRGEsRUFBQUEsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFDYixRQUFJbEIsS0FBSyxHQUFHLEtBQUtELFVBQUwsQ0FBZ0JtQixLQUFLLENBQUNsQixLQUF0QixDQUFaO0FBQ0EsUUFBSW1CLEtBQUssR0FBRztBQUFFQyxNQUFBQSxlQUFlLEVBQUUsU0FBU3BCLEtBQUssQ0FBQ0ksS0FBZixHQUF1QjtBQUExQyxLQUFaO0FBQ0EsUUFBSUgsSUFBSSxHQUFHRCxLQUFLLENBQUNDLElBQU4sQ0FBV29CLE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsR0FBMUIsQ0FBWDtBQUNBLFFBQUluQixNQUFNLEdBQUdGLEtBQUssQ0FBQ0UsTUFBTixDQUFhbUIsT0FBYixDQUFxQixLQUFyQixFQUE0QixHQUE1QixDQUFiO0FBQ0EsUUFBSUMsVUFBVSxHQUFJLGtCQUFpQnBCLE1BQU8sTUFBS0QsSUFBSyxFQUFwRDtBQUNBLFFBQUlzQixVQUFVLEdBQUksZ0RBQStDckIsTUFBTyxNQUFLRCxJQUFLLEVBQWxGO0FBQ0EsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDLGFBQVg7QUFBeUIsTUFBQSxLQUFLLEVBQUVrQjtBQUFoQyxPQUNDO0FBQUssTUFBQSxHQUFHLEVBQUVuQixLQUFLLENBQUNJLEtBQWhCO0FBQXVCLE1BQUEsS0FBSyxFQUFDLEtBQTdCO0FBQW1DLE1BQUEsTUFBTSxFQUFDO0FBQTFDLE1BREQsQ0FERCxFQUlDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUksTUFBQSxLQUFLLEVBQUM7QUFBVixPQUF5QkosS0FBSyxDQUFDQyxJQUEvQixDQURELEVBRUM7QUFBRyxNQUFBLEtBQUssRUFBQztBQUFULE9BQXlCRCxLQUFLLENBQUNFLE1BQS9CLENBRkQsRUFHQztBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsT0FBMkJGLEtBQUssQ0FBQ00sSUFBakMsQ0FIRCxFQUlDO0FBQ0MsTUFBQSxJQUFJLEVBQUVnQixVQURQO0FBRUMsTUFBQSxLQUFLLEVBQUMsb0NBRlA7QUFHQyxNQUFBLE1BQU0sRUFBQyxRQUhSO0FBSUMsTUFBQSxLQUFLLEVBQUM7QUFKUCxPQU1DLEVBQUMsSUFBRCxDQUFNLE9BQU4sT0FORCxDQUpELEVBWUM7QUFDQyxNQUFBLElBQUksRUFBRUMsVUFEUDtBQUVDLE1BQUEsS0FBSyxFQUFDLG9DQUZQO0FBR0MsTUFBQSxNQUFNLEVBQUMsUUFIUjtBQUlDLE1BQUEsS0FBSyxFQUFDO0FBSlAsT0FNQyxFQUFDLElBQUQsQ0FBTSxPQUFOLE9BTkQsQ0FaRCxDQUpELENBREQ7QUE0QkE7O0FBbkU0Qjs7QUFzRTlCLGVBQWV6QixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgQ29tcG9uZW50fSAgZnJvbSAnLi4vbGliL3ByZWFjdC5qcyc7XHJcbmltcG9ydCAqIGFzIEljb24gZnJvbSAnLi9JY29ucy5qcyc7XHJcblxyXG5jbGFzcyBUcmFjayBleHRlbmRzIENvbXBvbmVudCB7XHJcblx0cmVtYXBUcmFjayh0cmFjaykge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0bmFtZTogdHJhY2submFtZSxcclxuXHRcdFx0YXJ0aXN0OiB0cmFjay5hcnRpc3RbJyN0ZXh0J10sXHJcblx0XHRcdGFsYnVtOiB0cmFjay5hbGJ1bVsnI3RleHQnXSxcclxuXHRcdFx0aW1hZ2U6IHRoaXMuZmluZEltYWdlKHRyYWNrLmltYWdlKSxcclxuXHRcdFx0dGltZTogdGhpcy50cmFja1RpbWUodHJhY2spXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0dHJhY2tUaW1lKHRyYWNrKSB7XHJcblx0XHRsZXQgdGltZSA9ICdhIHdoaWxlIGFnbyc7XHJcblxyXG5cdFx0aWYgKHRyYWNrWydAYXR0ciddICYmIHRyYWNrWydAYXR0ciddLm5vd3BsYXlpbmcpIHtcclxuXHRcdFx0dGltZSA9ICdub3cnO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0cmFjay5kYXRlKSB7XHJcblx0XHRcdHRpbWUgPSBtb21lbnQudW5peCh0cmFjay5kYXRlLnV0cykuZnJvbU5vdygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aW1lO1xyXG5cdH1cclxuXHJcblx0ZmluZEltYWdlKHRyYWNrSW1hZ2VzKSB7XHJcblx0XHRsZXQgaW1hZ2UgPSB0cmFja0ltYWdlcy5yZXZlcnNlKCkuZmluZChpbWFnZSA9PiBpbWFnZVsnI3RleHQnXSAhPSAnJyk7XHJcblx0XHRyZXR1cm4gaW1hZ2VcclxuXHRcdFx0PyBpbWFnZVsnI3RleHQnXVxyXG5cdFx0XHQ6ICdkYXRhOmltYWdlL3N2Zyt4bWw7PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIj48cmVjdCBmaWxsPVwiIzMzM1wiIHg9XCIwXCIgeT1cIjBcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+PC9zdmc+JztcclxuXHR9XHJcblxyXG5cdHJlbmRlcihwcm9wcykge1xyXG5cdFx0bGV0IHRyYWNrID0gdGhpcy5yZW1hcFRyYWNrKHByb3BzLnRyYWNrKTtcclxuXHRcdGxldCBzdHlsZSA9IHsgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0cmFjay5pbWFnZSArICcpJyB9O1xyXG5cdFx0bGV0IG5hbWUgPSB0cmFjay5uYW1lLnJlcGxhY2UoL1xccysvLCAnKycpO1xyXG5cdFx0bGV0IGFydGlzdCA9IHRyYWNrLmFydGlzdC5yZXBsYWNlKC9cXHMrLywgJysnKTtcclxuXHRcdGxldCBzcG90aWZ5VXJpID0gYHNwb3RpZnk6c2VhcmNoOiR7YXJ0aXN0fSUyMCR7bmFtZX1gO1xyXG5cdFx0bGV0IHlvdXR1YmVVcmkgPSBgaHR0cHM6Ly93d3cueW91dHViZS5jb20vcmVzdWx0cz9zZWFyY2hfcXVlcnk9JHthcnRpc3R9Ky0rJHtuYW1lfWA7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2tcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW1hZ2VcIiBzdHlsZT17c3R5bGV9PlxyXG5cdFx0XHRcdFx0PGltZyBzcmM9e3RyYWNrLmltYWdlfSB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWluZm9cIj5cclxuXHRcdFx0XHRcdDxoMiBjbGFzcz1cIlRyYWNrLXRpdGxlXCI+e3RyYWNrLm5hbWV9PC9oMj5cclxuXHRcdFx0XHRcdDxwIGNsYXNzPVwiVHJhY2stYXJ0aXN0XCI+e3RyYWNrLmFydGlzdH08L3A+XHJcblx0XHRcdFx0XHQ8c21hbGwgY2xhc3M9XCJUcmFjay1kYXRlXCI+e3RyYWNrLnRpbWV9PC9zbWFsbD5cclxuXHRcdFx0XHRcdDxhXHJcblx0XHRcdFx0XHRcdGhyZWY9e3Nwb3RpZnlVcml9XHJcblx0XHRcdFx0XHRcdGNsYXNzPVwiVHJhY2stc2VhcmNoIFRyYWNrLXNlYXJjaC0tc3BvdGlmeVwiXHJcblx0XHRcdFx0XHRcdHRhcmdldD1cIl9ibGFua1wiXHJcblx0XHRcdFx0XHRcdHRpdGxlPVwiU2VhcmNoIGZvciB0aGlzIHRyYWNrIG9uIFNwb3RpZnlcIlxyXG5cdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHQ8SWNvbi5TcG90aWZ5IC8+XHJcblx0XHRcdFx0XHQ8L2E+XHJcblx0XHRcdFx0XHQ8YVxyXG5cdFx0XHRcdFx0XHRocmVmPXt5b3V0dWJlVXJpfVxyXG5cdFx0XHRcdFx0XHRjbGFzcz1cIlRyYWNrLXNlYXJjaCBUcmFjay1zZWFyY2gtLXlvdXR1YmVcIlxyXG5cdFx0XHRcdFx0XHR0YXJnZXQ9XCJfYmxhbmtcIlxyXG5cdFx0XHRcdFx0XHR0aXRsZT1cIlNlYXJjaCBmb3IgdGhpcyB0cmFjayBvbiBZb3VUdWJlXCJcclxuXHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0PEljb24uWW91dHViZSAvPlxyXG5cdFx0XHRcdFx0PC9hPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUcmFjaztcclxuIl0sImZpbGUiOiJjb21wb25lbnRzL1RyYWNrLmpzIn0=