const {
  h,
  Component
} = preact;

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      date: moment.unix(track.date.uts)
    };
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    return h("div", {
      class: "Track"
    }, h("div", {
      class: "Track-image"
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.date.fromNow())));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsInByZWFjdCIsIlRyYWNrIiwicmVtYXBUcmFjayIsInRyYWNrIiwibmFtZSIsImFydGlzdCIsImFsYnVtIiwiaW1hZ2UiLCJmaW5kSW1hZ2UiLCJkYXRlIiwibW9tZW50IiwidW5peCIsInV0cyIsInRyYWNrSW1hZ2VzIiwicmV2ZXJzZSIsImZpbmQiLCJyZW5kZXIiLCJwcm9wcyIsImZyb21Ob3ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUEsQ0FBRjtBQUFLQyxFQUFBQTtBQUFMLElBQW1CQyxNQUF6Qjs7QUFFQSxNQUFNQyxLQUFOLFNBQW9CRixTQUFwQixDQUE4QjtBQUM3QkcsRUFBQUEsVUFBVSxDQUFDQyxLQUFELEVBQVE7QUFDakIsV0FBTztBQUNOQyxNQUFBQSxJQUFJLEVBQUVELEtBQUssQ0FBQ0MsSUFETjtBQUVOQyxNQUFBQSxNQUFNLEVBQUVGLEtBQUssQ0FBQ0UsTUFBTixDQUFhLE9BQWIsQ0FGRjtBQUdOQyxNQUFBQSxLQUFLLEVBQUVILEtBQUssQ0FBQ0csS0FBTixDQUFZLE9BQVosQ0FIRDtBQUlOQyxNQUFBQSxLQUFLLEVBQUUsS0FBS0MsU0FBTCxDQUFlTCxLQUFLLENBQUNJLEtBQXJCLENBSkQ7QUFLTkUsTUFBQUEsSUFBSSxFQUFFQyxNQUFNLENBQUNDLElBQVAsQ0FBWVIsS0FBSyxDQUFDTSxJQUFOLENBQVdHLEdBQXZCO0FBTEEsS0FBUDtBQU9BOztBQUVESixFQUFBQSxTQUFTLENBQUNLLFdBQUQsRUFBYztBQUN0QixRQUFJTixLQUFLLEdBQUdNLFdBQVcsQ0FBQ0MsT0FBWixHQUFzQkMsSUFBdEIsQ0FBMkJSLEtBQUssSUFBSUEsS0FBSyxDQUFDLE9BQUQsQ0FBTCxJQUFrQixFQUF0RCxDQUFaO0FBQ0EsV0FBT0EsS0FBSyxHQUNUQSxLQUFLLENBQUMsT0FBRCxDQURJLEdBRVQscUpBRkg7QUFHQTs7QUFFRFMsRUFBQUEsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFDYixRQUFJZCxLQUFLLEdBQUcsS0FBS0QsVUFBTCxDQUFnQmUsS0FBSyxDQUFDZCxLQUF0QixDQUFaO0FBQ0EsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsR0FBRyxFQUFFQSxLQUFLLENBQUNJLEtBQWhCO0FBQXVCLE1BQUEsS0FBSyxFQUFDLEtBQTdCO0FBQW1DLE1BQUEsTUFBTSxFQUFDO0FBQTFDLE1BREQsQ0FERCxFQUlDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUksTUFBQSxLQUFLLEVBQUM7QUFBVixPQUF5QkosS0FBSyxDQUFDQyxJQUEvQixDQURELEVBRUM7QUFBRyxNQUFBLEtBQUssRUFBQztBQUFULE9BQXlCRCxLQUFLLENBQUNFLE1BQS9CLENBRkQsRUFHQztBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsT0FBMkJGLEtBQUssQ0FBQ00sSUFBTixDQUFXUyxPQUFYLEVBQTNCLENBSEQsQ0FKRCxDQUREO0FBWUE7O0FBaEM0Qjs7QUFtQzlCLGVBQWVqQixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBoLCBDb21wb25lbnQgfSA9IHByZWFjdDtcclxuXHJcbmNsYXNzIFRyYWNrIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHRyZW1hcFRyYWNrKHRyYWNrKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRuYW1lOiB0cmFjay5uYW1lLFxyXG5cdFx0XHRhcnRpc3Q6IHRyYWNrLmFydGlzdFsnI3RleHQnXSxcclxuXHRcdFx0YWxidW06IHRyYWNrLmFsYnVtWycjdGV4dCddLFxyXG5cdFx0XHRpbWFnZTogdGhpcy5maW5kSW1hZ2UodHJhY2suaW1hZ2UpLFxyXG5cdFx0XHRkYXRlOiBtb21lbnQudW5peCh0cmFjay5kYXRlLnV0cylcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRmaW5kSW1hZ2UodHJhY2tJbWFnZXMpIHtcclxuXHRcdGxldCBpbWFnZSA9IHRyYWNrSW1hZ2VzLnJldmVyc2UoKS5maW5kKGltYWdlID0+IGltYWdlWycjdGV4dCddICE9ICcnKTtcclxuXHRcdHJldHVybiBpbWFnZVxyXG5cdFx0XHQ/IGltYWdlWycjdGV4dCddXHJcblx0XHRcdDogJ2RhdGE6aW1hZ2Uvc3ZnK3htbDs8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiPjxyZWN0IGZpbGw9XCIjMzMzXCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCIgLz48L3N2Zz4nO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKHByb3BzKSB7XHJcblx0XHRsZXQgdHJhY2sgPSB0aGlzLnJlbWFwVHJhY2socHJvcHMudHJhY2spO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrXCI+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWltYWdlXCI+XHJcblx0XHRcdFx0XHQ8aW1nIHNyYz17dHJhY2suaW1hZ2V9IHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCIgLz5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW5mb1wiPlxyXG5cdFx0XHRcdFx0PGgyIGNsYXNzPVwiVHJhY2stdGl0bGVcIj57dHJhY2submFtZX08L2gyPlxyXG5cdFx0XHRcdFx0PHAgY2xhc3M9XCJUcmFjay1hcnRpc3RcIj57dHJhY2suYXJ0aXN0fTwvcD5cclxuXHRcdFx0XHRcdDxzbWFsbCBjbGFzcz1cIlRyYWNrLWRhdGVcIj57dHJhY2suZGF0ZS5mcm9tTm93KCl9PC9zbWFsbD5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHJhY2s7XHJcbiJdLCJmaWxlIjoiY29tcG9uZW50cy9UcmFjay5qcyJ9