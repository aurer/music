import { h, Component } from '../lib/preact.js';
import * as Icon from './Icons.js';

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      time: this.trackTime(track)
    };
  }

  trackTime(track) {
    let time = 'a while ago';

    if (track['@attr'] && track['@attr'].nowplaying) {
      time = 'now';
    }

    if (track.date) {
      time = moment.unix(track.date.uts).fromNow();
    }

    return time;
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let name = track.name.replace(/\s+/, '+');
    let artist = track.artist.replace(/\s+/, '+');
    let spotifyUri = `spotify:search:${artist}%20${name}`;
    let youtubeUri = `https://www.youtube.com/results?search_query=${artist}+-+${name}`;
    return h("div", {
      class: "Track"
    }, h("div", {
      class: "Track-image",
      style: style
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.time), h("a", {
      href: spotifyUri,
      class: "Track-search Track-search--spotify",
      target: "_blank",
      title: "Search for this track on Spotify"
    }, h(Icon.Spotify, null)), h("a", {
      href: youtubeUri,
      class: "Track-search Track-search--youtube",
      target: "_blank",
      title: "Search for this track on YouTube"
    }, h(Icon.Youtube, null))));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsIkljb24iLCJUcmFjayIsInJlbWFwVHJhY2siLCJ0cmFjayIsIm5hbWUiLCJhcnRpc3QiLCJhbGJ1bSIsImltYWdlIiwiZmluZEltYWdlIiwidGltZSIsInRyYWNrVGltZSIsIm5vd3BsYXlpbmciLCJkYXRlIiwibW9tZW50IiwidW5peCIsInV0cyIsImZyb21Ob3ciLCJ0cmFja0ltYWdlcyIsInJldmVyc2UiLCJmaW5kIiwicmVuZGVyIiwicHJvcHMiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsInJlcGxhY2UiLCJzcG90aWZ5VXJpIiwieW91dHViZVVyaSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsQ0FBVCxFQUFZQyxTQUFaLFFBQTZCLGtCQUE3QjtBQUNBLE9BQU8sS0FBS0MsSUFBWixNQUFzQixZQUF0Qjs7QUFFQSxNQUFNQyxLQUFOLFNBQW9CRixTQUFwQixDQUE4QjtBQUM3QkcsRUFBQUEsVUFBVSxDQUFDQyxLQUFELEVBQVE7QUFDakIsV0FBTztBQUNOQyxNQUFBQSxJQUFJLEVBQUVELEtBQUssQ0FBQ0MsSUFETjtBQUVOQyxNQUFBQSxNQUFNLEVBQUVGLEtBQUssQ0FBQ0UsTUFBTixDQUFhLE9BQWIsQ0FGRjtBQUdOQyxNQUFBQSxLQUFLLEVBQUVILEtBQUssQ0FBQ0csS0FBTixDQUFZLE9BQVosQ0FIRDtBQUlOQyxNQUFBQSxLQUFLLEVBQUUsS0FBS0MsU0FBTCxDQUFlTCxLQUFLLENBQUNJLEtBQXJCLENBSkQ7QUFLTkUsTUFBQUEsSUFBSSxFQUFFLEtBQUtDLFNBQUwsQ0FBZVAsS0FBZjtBQUxBLEtBQVA7QUFPQTs7QUFFRE8sRUFBQUEsU0FBUyxDQUFDUCxLQUFELEVBQVE7QUFDaEIsUUFBSU0sSUFBSSxHQUFHLGFBQVg7O0FBRUEsUUFBSU4sS0FBSyxDQUFDLE9BQUQsQ0FBTCxJQUFrQkEsS0FBSyxDQUFDLE9BQUQsQ0FBTCxDQUFlUSxVQUFyQyxFQUFpRDtBQUNoREYsTUFBQUEsSUFBSSxHQUFHLEtBQVA7QUFDQTs7QUFFRCxRQUFJTixLQUFLLENBQUNTLElBQVYsRUFBZ0I7QUFDZkgsTUFBQUEsSUFBSSxHQUFHSSxNQUFNLENBQUNDLElBQVAsQ0FBWVgsS0FBSyxDQUFDUyxJQUFOLENBQVdHLEdBQXZCLEVBQTRCQyxPQUE1QixFQUFQO0FBQ0E7O0FBRUQsV0FBT1AsSUFBUDtBQUNBOztBQUVERCxFQUFBQSxTQUFTLENBQUNTLFdBQUQsRUFBYztBQUN0QixRQUFJVixLQUFLLEdBQUdVLFdBQVcsQ0FBQ0MsT0FBWixHQUFzQkMsSUFBdEIsQ0FBMkJaLEtBQUssSUFBSUEsS0FBSyxDQUFDLE9BQUQsQ0FBTCxJQUFrQixFQUF0RCxDQUFaO0FBQ0EsV0FBT0EsS0FBSyxHQUNUQSxLQUFLLENBQUMsT0FBRCxDQURJLEdBRVQscUpBRkg7QUFHQTs7QUFFRGEsRUFBQUEsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFDYixRQUFJbEIsS0FBSyxHQUFHLEtBQUtELFVBQUwsQ0FBZ0JtQixLQUFLLENBQUNsQixLQUF0QixDQUFaO0FBQ0EsUUFBSW1CLEtBQUssR0FBRztBQUFFQyxNQUFBQSxlQUFlLEVBQUUsU0FBU3BCLEtBQUssQ0FBQ0ksS0FBZixHQUF1QjtBQUExQyxLQUFaO0FBQ0EsUUFBSUgsSUFBSSxHQUFHRCxLQUFLLENBQUNDLElBQU4sQ0FBV29CLE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsR0FBMUIsQ0FBWDtBQUNBLFFBQUluQixNQUFNLEdBQUdGLEtBQUssQ0FBQ0UsTUFBTixDQUFhbUIsT0FBYixDQUFxQixLQUFyQixFQUE0QixHQUE1QixDQUFiO0FBQ0EsUUFBSUMsVUFBVSxHQUFJLGtCQUFpQnBCLE1BQU8sTUFBS0QsSUFBSyxFQUFwRDtBQUNBLFFBQUlzQixVQUFVLEdBQUksZ0RBQStDckIsTUFBTyxNQUFLRCxJQUFLLEVBQWxGO0FBQ0EsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDO0FBQVgsT0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDLGFBQVg7QUFBeUIsTUFBQSxLQUFLLEVBQUVrQjtBQUFoQyxPQUNDO0FBQUssTUFBQSxHQUFHLEVBQUVuQixLQUFLLENBQUNJLEtBQWhCO0FBQXVCLE1BQUEsS0FBSyxFQUFDLEtBQTdCO0FBQW1DLE1BQUEsTUFBTSxFQUFDO0FBQTFDLE1BREQsQ0FERCxFQUlDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUksTUFBQSxLQUFLLEVBQUM7QUFBVixPQUF5QkosS0FBSyxDQUFDQyxJQUEvQixDQURELEVBRUM7QUFBRyxNQUFBLEtBQUssRUFBQztBQUFULE9BQXlCRCxLQUFLLENBQUNFLE1BQS9CLENBRkQsRUFHQztBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsT0FBMkJGLEtBQUssQ0FBQ00sSUFBakMsQ0FIRCxFQUlDO0FBQ0MsTUFBQSxJQUFJLEVBQUVnQixVQURQO0FBRUMsTUFBQSxLQUFLLEVBQUMsb0NBRlA7QUFHQyxNQUFBLE1BQU0sRUFBQyxRQUhSO0FBSUMsTUFBQSxLQUFLLEVBQUM7QUFKUCxPQU1DLEVBQUMsSUFBRCxDQUFNLE9BQU4sT0FORCxDQUpELEVBWUM7QUFDQyxNQUFBLElBQUksRUFBRUMsVUFEUDtBQUVDLE1BQUEsS0FBSyxFQUFDLG9DQUZQO0FBR0MsTUFBQSxNQUFNLEVBQUMsUUFIUjtBQUlDLE1BQUEsS0FBSyxFQUFDO0FBSlAsT0FNQyxFQUFDLElBQUQsQ0FBTSxPQUFOLE9BTkQsQ0FaRCxDQUpELENBREQ7QUE0QkE7O0FBbkU0Qjs7QUFzRTlCLGVBQWV6QixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgQ29tcG9uZW50fSAgZnJvbSAnLi4vbGliL3ByZWFjdC5qcyc7XG5pbXBvcnQgKiBhcyBJY29uIGZyb20gJy4vSWNvbnMuanMnO1xuXG5jbGFzcyBUcmFjayBleHRlbmRzIENvbXBvbmVudCB7XG5cdHJlbWFwVHJhY2sodHJhY2spIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0bmFtZTogdHJhY2submFtZSxcblx0XHRcdGFydGlzdDogdHJhY2suYXJ0aXN0WycjdGV4dCddLFxuXHRcdFx0YWxidW06IHRyYWNrLmFsYnVtWycjdGV4dCddLFxuXHRcdFx0aW1hZ2U6IHRoaXMuZmluZEltYWdlKHRyYWNrLmltYWdlKSxcblx0XHRcdHRpbWU6IHRoaXMudHJhY2tUaW1lKHRyYWNrKVxuXHRcdH07XG5cdH1cblxuXHR0cmFja1RpbWUodHJhY2spIHtcblx0XHRsZXQgdGltZSA9ICdhIHdoaWxlIGFnbyc7XG5cblx0XHRpZiAodHJhY2tbJ0BhdHRyJ10gJiYgdHJhY2tbJ0BhdHRyJ10ubm93cGxheWluZykge1xuXHRcdFx0dGltZSA9ICdub3cnO1xuXHRcdH1cblxuXHRcdGlmICh0cmFjay5kYXRlKSB7XG5cdFx0XHR0aW1lID0gbW9tZW50LnVuaXgodHJhY2suZGF0ZS51dHMpLmZyb21Ob3coKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGltZTtcblx0fVxuXG5cdGZpbmRJbWFnZSh0cmFja0ltYWdlcykge1xuXHRcdGxldCBpbWFnZSA9IHRyYWNrSW1hZ2VzLnJldmVyc2UoKS5maW5kKGltYWdlID0+IGltYWdlWycjdGV4dCddICE9ICcnKTtcblx0XHRyZXR1cm4gaW1hZ2Vcblx0XHRcdD8gaW1hZ2VbJyN0ZXh0J11cblx0XHRcdDogJ2RhdGE6aW1hZ2Uvc3ZnK3htbDs8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiPjxyZWN0IGZpbGw9XCIjMzMzXCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCIgLz48L3N2Zz4nO1xuXHR9XG5cblx0cmVuZGVyKHByb3BzKSB7XG5cdFx0bGV0IHRyYWNrID0gdGhpcy5yZW1hcFRyYWNrKHByb3BzLnRyYWNrKTtcblx0XHRsZXQgc3R5bGUgPSB7IGJhY2tncm91bmRJbWFnZTogJ3VybCgnICsgdHJhY2suaW1hZ2UgKyAnKScgfTtcblx0XHRsZXQgbmFtZSA9IHRyYWNrLm5hbWUucmVwbGFjZSgvXFxzKy8sICcrJyk7XG5cdFx0bGV0IGFydGlzdCA9IHRyYWNrLmFydGlzdC5yZXBsYWNlKC9cXHMrLywgJysnKTtcblx0XHRsZXQgc3BvdGlmeVVyaSA9IGBzcG90aWZ5OnNlYXJjaDoke2FydGlzdH0lMjAke25hbWV9YDtcblx0XHRsZXQgeW91dHViZVVyaSA9IGBodHRwczovL3d3dy55b3V0dWJlLmNvbS9yZXN1bHRzP3NlYXJjaF9xdWVyeT0ke2FydGlzdH0rLSske25hbWV9YDtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrXCI+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJUcmFjay1pbWFnZVwiIHN0eWxlPXtzdHlsZX0+XG5cdFx0XHRcdFx0PGltZyBzcmM9e3RyYWNrLmltYWdlfSB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW5mb1wiPlxuXHRcdFx0XHRcdDxoMiBjbGFzcz1cIlRyYWNrLXRpdGxlXCI+e3RyYWNrLm5hbWV9PC9oMj5cblx0XHRcdFx0XHQ8cCBjbGFzcz1cIlRyYWNrLWFydGlzdFwiPnt0cmFjay5hcnRpc3R9PC9wPlxuXHRcdFx0XHRcdDxzbWFsbCBjbGFzcz1cIlRyYWNrLWRhdGVcIj57dHJhY2sudGltZX08L3NtYWxsPlxuXHRcdFx0XHRcdDxhXG5cdFx0XHRcdFx0XHRocmVmPXtzcG90aWZ5VXJpfVxuXHRcdFx0XHRcdFx0Y2xhc3M9XCJUcmFjay1zZWFyY2ggVHJhY2stc2VhcmNoLS1zcG90aWZ5XCJcblx0XHRcdFx0XHRcdHRhcmdldD1cIl9ibGFua1wiXG5cdFx0XHRcdFx0XHR0aXRsZT1cIlNlYXJjaCBmb3IgdGhpcyB0cmFjayBvbiBTcG90aWZ5XCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHQ8SWNvbi5TcG90aWZ5IC8+XG5cdFx0XHRcdFx0PC9hPlxuXHRcdFx0XHRcdDxhXG5cdFx0XHRcdFx0XHRocmVmPXt5b3V0dWJlVXJpfVxuXHRcdFx0XHRcdFx0Y2xhc3M9XCJUcmFjay1zZWFyY2ggVHJhY2stc2VhcmNoLS15b3V0dWJlXCJcblx0XHRcdFx0XHRcdHRhcmdldD1cIl9ibGFua1wiXG5cdFx0XHRcdFx0XHR0aXRsZT1cIlNlYXJjaCBmb3IgdGhpcyB0cmFjayBvbiBZb3VUdWJlXCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHQ8SWNvbi5Zb3V0dWJlIC8+XG5cdFx0XHRcdFx0PC9hPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVHJhY2s7XG4iXSwiZmlsZSI6ImNvbXBvbmVudHMvVHJhY2suanMifQ==