const {
  h,
  Component
} = preact;
import * as Icon from './Icons.js';

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      time: this.trackTime(track)
    };
  }

  trackTime(track) {
    let time = 'a while ago';

    if (track['@attr'] && track['@attr'].nowplaying) {
      time = 'now';
    }

    if (track.date) {
      time = moment.unix(track.date.uts).fromNow();
    }

    return time;
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let name = track.name.replace(/\s+/, '+');
    let artist = track.artist.replace(/\s+/, '+');
    let spotifyUri = `spotify:search:${artist}%20${name}`;
    let youtubeUri = `https://www.youtube.com/results?search_query=${artist}+-+${name}`;
    return h("div", {
      class: "Track"
    }, h("div", {
      class: "Track-image",
      style: style
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.time), h("a", {
      href: spotifyUri,
      class: "Track-search Track-search--spotify",
      target: "_blank",
      title: "Search for this track on Spotify"
    }, h(Icon.Spotify, null)), h("a", {
      href: youtubeUri,
      class: "Track-search Track-search--youtube",
      target: "_blank",
      title: "Search for this track on YouTube"
    }, h(Icon.Youtube, null))));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsInByZWFjdCIsIkljb24iLCJUcmFjayIsInJlbWFwVHJhY2siLCJ0cmFjayIsIm5hbWUiLCJhcnRpc3QiLCJhbGJ1bSIsImltYWdlIiwiZmluZEltYWdlIiwidGltZSIsInRyYWNrVGltZSIsIm5vd3BsYXlpbmciLCJkYXRlIiwibW9tZW50IiwidW5peCIsInV0cyIsImZyb21Ob3ciLCJ0cmFja0ltYWdlcyIsInJldmVyc2UiLCJmaW5kIiwicmVuZGVyIiwicHJvcHMiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsInJlcGxhY2UiLCJzcG90aWZ5VXJpIiwieW91dHViZVVyaSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBbUJDLE1BQXpCO0FBQ0EsT0FBTyxLQUFLQyxJQUFaLE1BQXNCLFlBQXRCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JILFNBQXBCLENBQThCO0FBQzdCSSxFQUFBQSxVQUFVLENBQUNDLEtBQUQsRUFBUTtBQUNqQixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUQsS0FBSyxDQUFDQyxJQUROO0FBRU5DLE1BQUFBLE1BQU0sRUFBRUYsS0FBSyxDQUFDRSxNQUFOLENBQWEsT0FBYixDQUZGO0FBR05DLE1BQUFBLEtBQUssRUFBRUgsS0FBSyxDQUFDRyxLQUFOLENBQVksT0FBWixDQUhEO0FBSU5DLE1BQUFBLEtBQUssRUFBRSxLQUFLQyxTQUFMLENBQWVMLEtBQUssQ0FBQ0ksS0FBckIsQ0FKRDtBQUtORSxNQUFBQSxJQUFJLEVBQUUsS0FBS0MsU0FBTCxDQUFlUCxLQUFmO0FBTEEsS0FBUDtBQU9BOztBQUVETyxFQUFBQSxTQUFTLENBQUNQLEtBQUQsRUFBUTtBQUNoQixRQUFJTSxJQUFJLEdBQUcsYUFBWDs7QUFFQSxRQUFJTixLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCQSxLQUFLLENBQUMsT0FBRCxDQUFMLENBQWVRLFVBQXJDLEVBQWlEO0FBQ2hERixNQUFBQSxJQUFJLEdBQUcsS0FBUDtBQUNBOztBQUVELFFBQUlOLEtBQUssQ0FBQ1MsSUFBVixFQUFnQjtBQUNmSCxNQUFBQSxJQUFJLEdBQUdJLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZWCxLQUFLLENBQUNTLElBQU4sQ0FBV0csR0FBdkIsRUFBNEJDLE9BQTVCLEVBQVA7QUFDQTs7QUFFRCxXQUFPUCxJQUFQO0FBQ0E7O0FBRURELEVBQUFBLFNBQVMsQ0FBQ1MsV0FBRCxFQUFjO0FBQ3RCLFFBQUlWLEtBQUssR0FBR1UsV0FBVyxDQUFDQyxPQUFaLEdBQXNCQyxJQUF0QixDQUEyQlosS0FBSyxJQUFJQSxLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCLEVBQXRELENBQVo7QUFDQSxXQUFPQSxLQUFLLEdBQ1RBLEtBQUssQ0FBQyxPQUFELENBREksR0FFVCxxSkFGSDtBQUdBOztBQUVEYSxFQUFBQSxNQUFNLENBQUNDLEtBQUQsRUFBUTtBQUNiLFFBQUlsQixLQUFLLEdBQUcsS0FBS0QsVUFBTCxDQUFnQm1CLEtBQUssQ0FBQ2xCLEtBQXRCLENBQVo7QUFDQSxRQUFJbUIsS0FBSyxHQUFHO0FBQUVDLE1BQUFBLGVBQWUsRUFBRSxTQUFTcEIsS0FBSyxDQUFDSSxLQUFmLEdBQXVCO0FBQTFDLEtBQVo7QUFDQSxRQUFJSCxJQUFJLEdBQUdELEtBQUssQ0FBQ0MsSUFBTixDQUFXb0IsT0FBWCxDQUFtQixLQUFuQixFQUEwQixHQUExQixDQUFYO0FBQ0EsUUFBSW5CLE1BQU0sR0FBR0YsS0FBSyxDQUFDRSxNQUFOLENBQWFtQixPQUFiLENBQXFCLEtBQXJCLEVBQTRCLEdBQTVCLENBQWI7QUFDQSxRQUFJQyxVQUFVLEdBQUksa0JBQWlCcEIsTUFBTyxNQUFLRCxJQUFLLEVBQXBEO0FBQ0EsUUFBSXNCLFVBQVUsR0FBSSxnREFBK0NyQixNQUFPLE1BQUtELElBQUssRUFBbEY7QUFDQSxXQUNDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUssTUFBQSxLQUFLLEVBQUMsYUFBWDtBQUF5QixNQUFBLEtBQUssRUFBRWtCO0FBQWhDLE9BQ0M7QUFBSyxNQUFBLEdBQUcsRUFBRW5CLEtBQUssQ0FBQ0ksS0FBaEI7QUFBdUIsTUFBQSxLQUFLLEVBQUMsS0FBN0I7QUFBbUMsTUFBQSxNQUFNLEVBQUM7QUFBMUMsTUFERCxDQURELEVBSUM7QUFBSyxNQUFBLEtBQUssRUFBQztBQUFYLE9BQ0M7QUFBSSxNQUFBLEtBQUssRUFBQztBQUFWLE9BQXlCSixLQUFLLENBQUNDLElBQS9CLENBREQsRUFFQztBQUFHLE1BQUEsS0FBSyxFQUFDO0FBQVQsT0FBeUJELEtBQUssQ0FBQ0UsTUFBL0IsQ0FGRCxFQUdDO0FBQU8sTUFBQSxLQUFLLEVBQUM7QUFBYixPQUEyQkYsS0FBSyxDQUFDTSxJQUFqQyxDQUhELEVBSUM7QUFDQyxNQUFBLElBQUksRUFBRWdCLFVBRFA7QUFFQyxNQUFBLEtBQUssRUFBQyxvQ0FGUDtBQUdDLE1BQUEsTUFBTSxFQUFDLFFBSFI7QUFJQyxNQUFBLEtBQUssRUFBQztBQUpQLE9BTUMsRUFBQyxJQUFELENBQU0sT0FBTixPQU5ELENBSkQsRUFZQztBQUNDLE1BQUEsSUFBSSxFQUFFQyxVQURQO0FBRUMsTUFBQSxLQUFLLEVBQUMsb0NBRlA7QUFHQyxNQUFBLE1BQU0sRUFBQyxRQUhSO0FBSUMsTUFBQSxLQUFLLEVBQUM7QUFKUCxPQU1DLEVBQUMsSUFBRCxDQUFNLE9BQU4sT0FORCxDQVpELENBSkQsQ0FERDtBQTRCQTs7QUFuRTRCOztBQXNFOUIsZUFBZXpCLEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGgsIENvbXBvbmVudCB9ID0gcHJlYWN0O1xuaW1wb3J0ICogYXMgSWNvbiBmcm9tICcuL0ljb25zLmpzJztcblxuY2xhc3MgVHJhY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRyZW1hcFRyYWNrKHRyYWNrKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdG5hbWU6IHRyYWNrLm5hbWUsXG5cdFx0XHRhcnRpc3Q6IHRyYWNrLmFydGlzdFsnI3RleHQnXSxcblx0XHRcdGFsYnVtOiB0cmFjay5hbGJ1bVsnI3RleHQnXSxcblx0XHRcdGltYWdlOiB0aGlzLmZpbmRJbWFnZSh0cmFjay5pbWFnZSksXG5cdFx0XHR0aW1lOiB0aGlzLnRyYWNrVGltZSh0cmFjaylcblx0XHR9O1xuXHR9XG5cblx0dHJhY2tUaW1lKHRyYWNrKSB7XG5cdFx0bGV0IHRpbWUgPSAnYSB3aGlsZSBhZ28nO1xuXG5cdFx0aWYgKHRyYWNrWydAYXR0ciddICYmIHRyYWNrWydAYXR0ciddLm5vd3BsYXlpbmcpIHtcblx0XHRcdHRpbWUgPSAnbm93Jztcblx0XHR9XG5cblx0XHRpZiAodHJhY2suZGF0ZSkge1xuXHRcdFx0dGltZSA9IG1vbWVudC51bml4KHRyYWNrLmRhdGUudXRzKS5mcm9tTm93KCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRpbWU7XG5cdH1cblxuXHRmaW5kSW1hZ2UodHJhY2tJbWFnZXMpIHtcblx0XHRsZXQgaW1hZ2UgPSB0cmFja0ltYWdlcy5yZXZlcnNlKCkuZmluZChpbWFnZSA9PiBpbWFnZVsnI3RleHQnXSAhPSAnJyk7XG5cdFx0cmV0dXJuIGltYWdlXG5cdFx0XHQ/IGltYWdlWycjdGV4dCddXG5cdFx0XHQ6ICdkYXRhOmltYWdlL3N2Zyt4bWw7PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIj48cmVjdCBmaWxsPVwiIzMzM1wiIHg9XCIwXCIgeT1cIjBcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+PC9zdmc+Jztcblx0fVxuXG5cdHJlbmRlcihwcm9wcykge1xuXHRcdGxldCB0cmFjayA9IHRoaXMucmVtYXBUcmFjayhwcm9wcy50cmFjayk7XG5cdFx0bGV0IHN0eWxlID0geyBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJyArIHRyYWNrLmltYWdlICsgJyknIH07XG5cdFx0bGV0IG5hbWUgPSB0cmFjay5uYW1lLnJlcGxhY2UoL1xccysvLCAnKycpO1xuXHRcdGxldCBhcnRpc3QgPSB0cmFjay5hcnRpc3QucmVwbGFjZSgvXFxzKy8sICcrJyk7XG5cdFx0bGV0IHNwb3RpZnlVcmkgPSBgc3BvdGlmeTpzZWFyY2g6JHthcnRpc3R9JTIwJHtuYW1lfWA7XG5cdFx0bGV0IHlvdXR1YmVVcmkgPSBgaHR0cHM6Ly93d3cueW91dHViZS5jb20vcmVzdWx0cz9zZWFyY2hfcXVlcnk9JHthcnRpc3R9Ky0rJHtuYW1lfWA7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3M9XCJUcmFja1wiPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW1hZ2VcIiBzdHlsZT17c3R5bGV9PlxuXHRcdFx0XHRcdDxpbWcgc3JjPXt0cmFjay5pbWFnZX0gd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiAvPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cIlRyYWNrLWluZm9cIj5cblx0XHRcdFx0XHQ8aDIgY2xhc3M9XCJUcmFjay10aXRsZVwiPnt0cmFjay5uYW1lfTwvaDI+XG5cdFx0XHRcdFx0PHAgY2xhc3M9XCJUcmFjay1hcnRpc3RcIj57dHJhY2suYXJ0aXN0fTwvcD5cblx0XHRcdFx0XHQ8c21hbGwgY2xhc3M9XCJUcmFjay1kYXRlXCI+e3RyYWNrLnRpbWV9PC9zbWFsbD5cblx0XHRcdFx0XHQ8YVxuXHRcdFx0XHRcdFx0aHJlZj17c3BvdGlmeVVyaX1cblx0XHRcdFx0XHRcdGNsYXNzPVwiVHJhY2stc2VhcmNoIFRyYWNrLXNlYXJjaC0tc3BvdGlmeVwiXG5cdFx0XHRcdFx0XHR0YXJnZXQ9XCJfYmxhbmtcIlxuXHRcdFx0XHRcdFx0dGl0bGU9XCJTZWFyY2ggZm9yIHRoaXMgdHJhY2sgb24gU3BvdGlmeVwiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PEljb24uU3BvdGlmeSAvPlxuXHRcdFx0XHRcdDwvYT5cblx0XHRcdFx0XHQ8YVxuXHRcdFx0XHRcdFx0aHJlZj17eW91dHViZVVyaX1cblx0XHRcdFx0XHRcdGNsYXNzPVwiVHJhY2stc2VhcmNoIFRyYWNrLXNlYXJjaC0teW91dHViZVwiXG5cdFx0XHRcdFx0XHR0YXJnZXQ9XCJfYmxhbmtcIlxuXHRcdFx0XHRcdFx0dGl0bGU9XCJTZWFyY2ggZm9yIHRoaXMgdHJhY2sgb24gWW91VHViZVwiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PEljb24uWW91dHViZSAvPlxuXHRcdFx0XHRcdDwvYT5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyYWNrO1xuIl0sImZpbGUiOiJjb21wb25lbnRzL1RyYWNrLmpzIn0=