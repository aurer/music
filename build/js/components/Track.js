import { h, Component } from '../lib/preact.js';

class Track extends Component {
  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      time: this.trackTime(track)
    };
  }

  trackTime(track) {
    let time = 'a while ago';

    if (track['@attr'] && track['@attr'].nowplaying) {
      time = 'now';
    }

    if (track.date) {
      time = moment.unix(track.date.uts).fromNow();
    }

    return time;
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let searchUri = `spotify:search:${track.artist}%20${track.name}`;
    let styles = {
      backgroundImage: 'url(' + track.image + ')'
    };
    return h("div", {
      class: "Track"
    }, h("div", {
      class: "Track-image",
      style: styles
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.time)));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsIlRyYWNrIiwicmVtYXBUcmFjayIsInRyYWNrIiwibmFtZSIsImFydGlzdCIsImFsYnVtIiwiaW1hZ2UiLCJmaW5kSW1hZ2UiLCJ0aW1lIiwidHJhY2tUaW1lIiwibm93cGxheWluZyIsImRhdGUiLCJtb21lbnQiLCJ1bml4IiwidXRzIiwiZnJvbU5vdyIsInRyYWNrSW1hZ2VzIiwicmV2ZXJzZSIsImZpbmQiLCJyZW5kZXIiLCJwcm9wcyIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwic2VhcmNoVXJpIiwic3R5bGVzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxDQUFULEVBQVlDLFNBQVosUUFBNkIsa0JBQTdCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JELFNBQXBCLENBQThCO0FBQzdCRSxFQUFBQSxVQUFVLENBQUNDLEtBQUQsRUFBUTtBQUNqQixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUQsS0FBSyxDQUFDQyxJQUROO0FBRU5DLE1BQUFBLE1BQU0sRUFBRUYsS0FBSyxDQUFDRSxNQUFOLENBQWEsT0FBYixDQUZGO0FBR05DLE1BQUFBLEtBQUssRUFBRUgsS0FBSyxDQUFDRyxLQUFOLENBQVksT0FBWixDQUhEO0FBSU5DLE1BQUFBLEtBQUssRUFBRSxLQUFLQyxTQUFMLENBQWVMLEtBQUssQ0FBQ0ksS0FBckIsQ0FKRDtBQUtORSxNQUFBQSxJQUFJLEVBQUUsS0FBS0MsU0FBTCxDQUFlUCxLQUFmO0FBTEEsS0FBUDtBQU9BOztBQUVETyxFQUFBQSxTQUFTLENBQUNQLEtBQUQsRUFBUTtBQUNoQixRQUFJTSxJQUFJLEdBQUcsYUFBWDs7QUFFQSxRQUFJTixLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCQSxLQUFLLENBQUMsT0FBRCxDQUFMLENBQWVRLFVBQXJDLEVBQWlEO0FBQ2hERixNQUFBQSxJQUFJLEdBQUcsS0FBUDtBQUNBOztBQUVELFFBQUlOLEtBQUssQ0FBQ1MsSUFBVixFQUFnQjtBQUNmSCxNQUFBQSxJQUFJLEdBQUdJLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZWCxLQUFLLENBQUNTLElBQU4sQ0FBV0csR0FBdkIsRUFBNEJDLE9BQTVCLEVBQVA7QUFDQTs7QUFFRCxXQUFPUCxJQUFQO0FBQ0E7O0FBRURELEVBQUFBLFNBQVMsQ0FBQ1MsV0FBRCxFQUFjO0FBQ3RCLFFBQUlWLEtBQUssR0FBR1UsV0FBVyxDQUFDQyxPQUFaLEdBQXNCQyxJQUF0QixDQUEyQlosS0FBSyxJQUFJQSxLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCLEVBQXRELENBQVo7QUFDQSxXQUFPQSxLQUFLLEdBQ1RBLEtBQUssQ0FBQyxPQUFELENBREksR0FFVCxxSkFGSDtBQUdBOztBQUVEYSxFQUFBQSxNQUFNLENBQUNDLEtBQUQsRUFBUTtBQUNiLFFBQUlsQixLQUFLLEdBQUcsS0FBS0QsVUFBTCxDQUFnQm1CLEtBQUssQ0FBQ2xCLEtBQXRCLENBQVo7QUFDQSxRQUFJbUIsS0FBSyxHQUFHO0FBQUVDLE1BQUFBLGVBQWUsRUFBRSxTQUFTcEIsS0FBSyxDQUFDSSxLQUFmLEdBQXVCO0FBQTFDLEtBQVo7QUFDQSxRQUFJaUIsU0FBUyxHQUFJLGtCQUFpQnJCLEtBQUssQ0FBQ0UsTUFBTyxNQUFLRixLQUFLLENBQUNDLElBQUssRUFBL0Q7QUFDQSxRQUFJcUIsTUFBTSxHQUFHO0FBQ1pGLE1BQUFBLGVBQWUsRUFBRSxTQUFTcEIsS0FBSyxDQUFDSSxLQUFmLEdBQXVCO0FBRDVCLEtBQWI7QUFHQSxXQUNDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUssTUFBQSxLQUFLLEVBQUMsYUFBWDtBQUF5QixNQUFBLEtBQUssRUFBRWtCO0FBQWhDLE9BQ0M7QUFBSyxNQUFBLEdBQUcsRUFBRXRCLEtBQUssQ0FBQ0ksS0FBaEI7QUFBdUIsTUFBQSxLQUFLLEVBQUMsS0FBN0I7QUFBbUMsTUFBQSxNQUFNLEVBQUM7QUFBMUMsTUFERCxDQURELEVBSUM7QUFBSyxNQUFBLEtBQUssRUFBQztBQUFYLE9BQ0M7QUFBSSxNQUFBLEtBQUssRUFBQztBQUFWLE9BQXlCSixLQUFLLENBQUNDLElBQS9CLENBREQsRUFFQztBQUFHLE1BQUEsS0FBSyxFQUFDO0FBQVQsT0FBeUJELEtBQUssQ0FBQ0UsTUFBL0IsQ0FGRCxFQUdDO0FBQU8sTUFBQSxLQUFLLEVBQUM7QUFBYixPQUEyQkYsS0FBSyxDQUFDTSxJQUFqQyxDQUhELENBSkQsQ0FERDtBQVlBOztBQW5ENEI7O0FBc0Q5QixlQUFlUixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgQ29tcG9uZW50fSAgZnJvbSAnLi4vbGliL3ByZWFjdC5qcyc7XHJcblxyXG5jbGFzcyBUcmFjayBleHRlbmRzIENvbXBvbmVudCB7XHJcblx0cmVtYXBUcmFjayh0cmFjaykge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0bmFtZTogdHJhY2submFtZSxcclxuXHRcdFx0YXJ0aXN0OiB0cmFjay5hcnRpc3RbJyN0ZXh0J10sXHJcblx0XHRcdGFsYnVtOiB0cmFjay5hbGJ1bVsnI3RleHQnXSxcclxuXHRcdFx0aW1hZ2U6IHRoaXMuZmluZEltYWdlKHRyYWNrLmltYWdlKSxcclxuXHRcdFx0dGltZTogdGhpcy50cmFja1RpbWUodHJhY2spXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0dHJhY2tUaW1lKHRyYWNrKSB7XHJcblx0XHRsZXQgdGltZSA9ICdhIHdoaWxlIGFnbyc7XHJcblxyXG5cdFx0aWYgKHRyYWNrWydAYXR0ciddICYmIHRyYWNrWydAYXR0ciddLm5vd3BsYXlpbmcpIHtcclxuXHRcdFx0dGltZSA9ICdub3cnO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0cmFjay5kYXRlKSB7XHJcblx0XHRcdHRpbWUgPSBtb21lbnQudW5peCh0cmFjay5kYXRlLnV0cykuZnJvbU5vdygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aW1lO1xyXG5cdH1cclxuXHJcblx0ZmluZEltYWdlKHRyYWNrSW1hZ2VzKSB7XHJcblx0XHRsZXQgaW1hZ2UgPSB0cmFja0ltYWdlcy5yZXZlcnNlKCkuZmluZChpbWFnZSA9PiBpbWFnZVsnI3RleHQnXSAhPSAnJyk7XHJcblx0XHRyZXR1cm4gaW1hZ2VcclxuXHRcdFx0PyBpbWFnZVsnI3RleHQnXVxyXG5cdFx0XHQ6ICdkYXRhOmltYWdlL3N2Zyt4bWw7PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIj48cmVjdCBmaWxsPVwiIzMzM1wiIHg9XCIwXCIgeT1cIjBcIiB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+PC9zdmc+JztcclxuXHR9XHJcblxyXG5cdHJlbmRlcihwcm9wcykge1xyXG5cdFx0bGV0IHRyYWNrID0gdGhpcy5yZW1hcFRyYWNrKHByb3BzLnRyYWNrKTtcclxuXHRcdGxldCBzdHlsZSA9IHsgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0cmFjay5pbWFnZSArICcpJyB9O1xyXG5cdFx0bGV0IHNlYXJjaFVyaSA9IGBzcG90aWZ5OnNlYXJjaDoke3RyYWNrLmFydGlzdH0lMjAke3RyYWNrLm5hbWV9YDtcclxuXHRcdGxldCBzdHlsZXMgPSB7XHJcblx0XHRcdGJhY2tncm91bmRJbWFnZTogJ3VybCgnICsgdHJhY2suaW1hZ2UgKyAnKSdcclxuXHRcdH07XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2tcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW1hZ2VcIiBzdHlsZT17c3R5bGVzfT5cclxuXHRcdFx0XHRcdDxpbWcgc3JjPXt0cmFjay5pbWFnZX0gd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiAvPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJUcmFjay1pbmZvXCI+XHJcblx0XHRcdFx0XHQ8aDIgY2xhc3M9XCJUcmFjay10aXRsZVwiPnt0cmFjay5uYW1lfTwvaDI+XHJcblx0XHRcdFx0XHQ8cCBjbGFzcz1cIlRyYWNrLWFydGlzdFwiPnt0cmFjay5hcnRpc3R9PC9wPlxyXG5cdFx0XHRcdFx0PHNtYWxsIGNsYXNzPVwiVHJhY2stZGF0ZVwiPnt0cmFjay50aW1lfTwvc21hbGw+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRyYWNrO1xyXG4iXSwiZmlsZSI6ImNvbXBvbmVudHMvVHJhY2suanMifQ==