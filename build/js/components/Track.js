import { h, Component } from '../lib/preact.js';
import * as Icon from './Icons.js';

class Track extends Component {
  constructor() {
    super();
    this.state = {
      showLinks: false
    };
  }

  remapTrack(track) {
    return {
      name: track.name,
      artist: track.artist['#text'],
      album: track.album['#text'],
      image: this.findImage(track.image),
      time: this.trackTime(track)
    };
  }

  trackTime(track) {
    let time = 'a while ago';

    if (track['@attr'] && track['@attr'].nowplaying) {
      time = 'now';
    }

    if (track.date) {
      time = moment.unix(track.date.uts).fromNow();
    }

    return time;
  }

  findImage(trackImages) {
    let image = trackImages.reverse().find(image => image['#text'] != '');
    return image ? image['#text'] : 'data:image/svg+xml;<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><rect fill="#333" x="0" y="0" width="300" height="300" /></svg>';
  }

  toggleLinks() {
    this.setState({
      showLinks: !this.state.showLinks
    });
  }

  render(props) {
    let track = this.remapTrack(props.track);
    let style = {
      backgroundImage: 'url(' + track.image + ')'
    };
    let name = track.name.replace(/\s+/, '+');
    let artist = track.artist.replace(/\s+/, '+');
    let spotifyUri = `spotify:search:${artist}%20${name}`;
    let youtubeUri = `https://www.youtube.com/results?search_query=${artist}+-+${name}`;
    return h("div", {
      class: "Track",
      onClick: this.toggleLinks.bind(this)
    }, h("div", {
      class: "Track-image",
      style: style
    }, h("img", {
      src: track.image,
      width: "300",
      height: "300"
    })), h("div", {
      class: "Track-info"
    }, h("h2", {
      class: "Track-title"
    }, track.name), h("p", {
      class: "Track-artist"
    }, track.artist), h("small", {
      class: "Track-date"
    }, track.time), h("div", {
      className: "Track-links",
      "aria-hidden": !this.state.showLinks
    }, h("a", {
      href: spotifyUri,
      class: "Track-link Track-link--spotify",
      target: "_blank",
      title: "Search for this track on Spotify"
    }, h(Icon.Spotify, null)), h("a", {
      href: youtubeUri,
      class: "Track-link Track-link--youtube",
      target: "_blank",
      title: "Search for this track on YouTube"
    }, h(Icon.Youtube, null)))));
  }

}

export default Track;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvVHJhY2suanMiXSwibmFtZXMiOlsiaCIsIkNvbXBvbmVudCIsIkljb24iLCJUcmFjayIsImNvbnN0cnVjdG9yIiwic3RhdGUiLCJzaG93TGlua3MiLCJyZW1hcFRyYWNrIiwidHJhY2siLCJuYW1lIiwiYXJ0aXN0IiwiYWxidW0iLCJpbWFnZSIsImZpbmRJbWFnZSIsInRpbWUiLCJ0cmFja1RpbWUiLCJub3dwbGF5aW5nIiwiZGF0ZSIsIm1vbWVudCIsInVuaXgiLCJ1dHMiLCJmcm9tTm93IiwidHJhY2tJbWFnZXMiLCJyZXZlcnNlIiwiZmluZCIsInRvZ2dsZUxpbmtzIiwic2V0U3RhdGUiLCJyZW5kZXIiLCJwcm9wcyIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwicmVwbGFjZSIsInNwb3RpZnlVcmkiLCJ5b3V0dWJlVXJpIiwiYmluZCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsQ0FBVCxFQUFZQyxTQUFaLFFBQTZCLGtCQUE3QjtBQUNBLE9BQU8sS0FBS0MsSUFBWixNQUFzQixZQUF0Qjs7QUFFQSxNQUFNQyxLQUFOLFNBQW9CRixTQUFwQixDQUE4QjtBQUM3QkcsRUFBQUEsV0FBVyxHQUFHO0FBQ2I7QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDWkMsTUFBQUEsU0FBUyxFQUFFO0FBREMsS0FBYjtBQUdBOztBQUVEQyxFQUFBQSxVQUFVLENBQUNDLEtBQUQsRUFBUTtBQUNqQixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUQsS0FBSyxDQUFDQyxJQUROO0FBRU5DLE1BQUFBLE1BQU0sRUFBRUYsS0FBSyxDQUFDRSxNQUFOLENBQWEsT0FBYixDQUZGO0FBR05DLE1BQUFBLEtBQUssRUFBRUgsS0FBSyxDQUFDRyxLQUFOLENBQVksT0FBWixDQUhEO0FBSU5DLE1BQUFBLEtBQUssRUFBRSxLQUFLQyxTQUFMLENBQWVMLEtBQUssQ0FBQ0ksS0FBckIsQ0FKRDtBQUtORSxNQUFBQSxJQUFJLEVBQUUsS0FBS0MsU0FBTCxDQUFlUCxLQUFmO0FBTEEsS0FBUDtBQU9BOztBQUVETyxFQUFBQSxTQUFTLENBQUNQLEtBQUQsRUFBUTtBQUNoQixRQUFJTSxJQUFJLEdBQUcsYUFBWDs7QUFFQSxRQUFJTixLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCQSxLQUFLLENBQUMsT0FBRCxDQUFMLENBQWVRLFVBQXJDLEVBQWlEO0FBQ2hERixNQUFBQSxJQUFJLEdBQUcsS0FBUDtBQUNBOztBQUVELFFBQUlOLEtBQUssQ0FBQ1MsSUFBVixFQUFnQjtBQUNmSCxNQUFBQSxJQUFJLEdBQUdJLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZWCxLQUFLLENBQUNTLElBQU4sQ0FBV0csR0FBdkIsRUFBNEJDLE9BQTVCLEVBQVA7QUFDQTs7QUFFRCxXQUFPUCxJQUFQO0FBQ0E7O0FBRURELEVBQUFBLFNBQVMsQ0FBQ1MsV0FBRCxFQUFjO0FBQ3RCLFFBQUlWLEtBQUssR0FBR1UsV0FBVyxDQUFDQyxPQUFaLEdBQXNCQyxJQUF0QixDQUEyQlosS0FBSyxJQUFJQSxLQUFLLENBQUMsT0FBRCxDQUFMLElBQWtCLEVBQXRELENBQVo7QUFDQSxXQUFPQSxLQUFLLEdBQ1RBLEtBQUssQ0FBQyxPQUFELENBREksR0FFVCxxSkFGSDtBQUdBOztBQUVEYSxFQUFBQSxXQUFXLEdBQUc7QUFDYixTQUFLQyxRQUFMLENBQWM7QUFBQ3BCLE1BQUFBLFNBQVMsRUFBRSxDQUFDLEtBQUtELEtBQUwsQ0FBV0M7QUFBeEIsS0FBZDtBQUNBOztBQUVEcUIsRUFBQUEsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFDYixRQUFJcEIsS0FBSyxHQUFHLEtBQUtELFVBQUwsQ0FBZ0JxQixLQUFLLENBQUNwQixLQUF0QixDQUFaO0FBQ0EsUUFBSXFCLEtBQUssR0FBRztBQUFFQyxNQUFBQSxlQUFlLEVBQUUsU0FBU3RCLEtBQUssQ0FBQ0ksS0FBZixHQUF1QjtBQUExQyxLQUFaO0FBQ0EsUUFBSUgsSUFBSSxHQUFHRCxLQUFLLENBQUNDLElBQU4sQ0FBV3NCLE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsR0FBMUIsQ0FBWDtBQUNBLFFBQUlyQixNQUFNLEdBQUdGLEtBQUssQ0FBQ0UsTUFBTixDQUFhcUIsT0FBYixDQUFxQixLQUFyQixFQUE0QixHQUE1QixDQUFiO0FBQ0EsUUFBSUMsVUFBVSxHQUFJLGtCQUFpQnRCLE1BQU8sTUFBS0QsSUFBSyxFQUFwRDtBQUNBLFFBQUl3QixVQUFVLEdBQUksZ0RBQStDdkIsTUFBTyxNQUFLRCxJQUFLLEVBQWxGO0FBRUEsV0FDQztBQUFLLE1BQUEsS0FBSyxFQUFDLE9BQVg7QUFBbUIsTUFBQSxPQUFPLEVBQUUsS0FBS2dCLFdBQUwsQ0FBaUJTLElBQWpCLENBQXNCLElBQXRCO0FBQTVCLE9BQ0M7QUFBSyxNQUFBLEtBQUssRUFBQyxhQUFYO0FBQXlCLE1BQUEsS0FBSyxFQUFFTDtBQUFoQyxPQUNDO0FBQUssTUFBQSxHQUFHLEVBQUVyQixLQUFLLENBQUNJLEtBQWhCO0FBQXVCLE1BQUEsS0FBSyxFQUFDLEtBQTdCO0FBQW1DLE1BQUEsTUFBTSxFQUFDO0FBQTFDLE1BREQsQ0FERCxFQUlDO0FBQUssTUFBQSxLQUFLLEVBQUM7QUFBWCxPQUNDO0FBQUksTUFBQSxLQUFLLEVBQUM7QUFBVixPQUF5QkosS0FBSyxDQUFDQyxJQUEvQixDQURELEVBRUM7QUFBRyxNQUFBLEtBQUssRUFBQztBQUFULE9BQXlCRCxLQUFLLENBQUNFLE1BQS9CLENBRkQsRUFHQztBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsT0FBMkJGLEtBQUssQ0FBQ00sSUFBakMsQ0FIRCxFQUlDO0FBQUssTUFBQSxTQUFTLEVBQUMsYUFBZjtBQUE2QixxQkFBYSxDQUFDLEtBQUtULEtBQUwsQ0FBV0M7QUFBdEQsT0FDQztBQUNDLE1BQUEsSUFBSSxFQUFFMEIsVUFEUDtBQUVDLE1BQUEsS0FBSyxFQUFDLGdDQUZQO0FBR0MsTUFBQSxNQUFNLEVBQUMsUUFIUjtBQUlDLE1BQUEsS0FBSyxFQUFDO0FBSlAsT0FNQyxFQUFDLElBQUQsQ0FBTSxPQUFOLE9BTkQsQ0FERCxFQVNDO0FBQ0MsTUFBQSxJQUFJLEVBQUVDLFVBRFA7QUFFQyxNQUFBLEtBQUssRUFBQyxnQ0FGUDtBQUdDLE1BQUEsTUFBTSxFQUFDLFFBSFI7QUFJQyxNQUFBLEtBQUssRUFBQztBQUpQLE9BTUMsRUFBQyxJQUFELENBQU0sT0FBTixPQU5ELENBVEQsQ0FKRCxDQUpELENBREQ7QUE4QkE7O0FBakY0Qjs7QUFvRjlCLGVBQWU5QixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgQ29tcG9uZW50fSAgZnJvbSAnLi4vbGliL3ByZWFjdC5qcyc7XG5pbXBvcnQgKiBhcyBJY29uIGZyb20gJy4vSWNvbnMuanMnO1xuXG5jbGFzcyBUcmFjayBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cdFx0dGhpcy5zdGF0ZSA9IHtcblx0XHRcdHNob3dMaW5rczogZmFsc2Vcblx0XHR9O1xuXHR9XG5cblx0cmVtYXBUcmFjayh0cmFjaykge1xuXHRcdHJldHVybiB7XG5cdFx0XHRuYW1lOiB0cmFjay5uYW1lLFxuXHRcdFx0YXJ0aXN0OiB0cmFjay5hcnRpc3RbJyN0ZXh0J10sXG5cdFx0XHRhbGJ1bTogdHJhY2suYWxidW1bJyN0ZXh0J10sXG5cdFx0XHRpbWFnZTogdGhpcy5maW5kSW1hZ2UodHJhY2suaW1hZ2UpLFxuXHRcdFx0dGltZTogdGhpcy50cmFja1RpbWUodHJhY2spXG5cdFx0fTtcblx0fVxuXG5cdHRyYWNrVGltZSh0cmFjaykge1xuXHRcdGxldCB0aW1lID0gJ2Egd2hpbGUgYWdvJztcblxuXHRcdGlmICh0cmFja1snQGF0dHInXSAmJiB0cmFja1snQGF0dHInXS5ub3dwbGF5aW5nKSB7XG5cdFx0XHR0aW1lID0gJ25vdyc7XG5cdFx0fVxuXG5cdFx0aWYgKHRyYWNrLmRhdGUpIHtcblx0XHRcdHRpbWUgPSBtb21lbnQudW5peCh0cmFjay5kYXRlLnV0cykuZnJvbU5vdygpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aW1lO1xuXHR9XG5cblx0ZmluZEltYWdlKHRyYWNrSW1hZ2VzKSB7XG5cdFx0bGV0IGltYWdlID0gdHJhY2tJbWFnZXMucmV2ZXJzZSgpLmZpbmQoaW1hZ2UgPT4gaW1hZ2VbJyN0ZXh0J10gIT0gJycpO1xuXHRcdHJldHVybiBpbWFnZVxuXHRcdFx0PyBpbWFnZVsnI3RleHQnXVxuXHRcdFx0OiAnZGF0YTppbWFnZS9zdmcreG1sOzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMzAwXCIgaGVpZ2h0PVwiMzAwXCI+PHJlY3QgZmlsbD1cIiMzMzNcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiAvPjwvc3ZnPic7XG5cdH1cblxuXHR0b2dnbGVMaW5rcygpIHtcblx0XHR0aGlzLnNldFN0YXRlKHtzaG93TGlua3M6ICF0aGlzLnN0YXRlLnNob3dMaW5rc30pXG5cdH1cblxuXHRyZW5kZXIocHJvcHMpIHtcblx0XHRsZXQgdHJhY2sgPSB0aGlzLnJlbWFwVHJhY2socHJvcHMudHJhY2spO1xuXHRcdGxldCBzdHlsZSA9IHsgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0cmFjay5pbWFnZSArICcpJyB9O1xuXHRcdGxldCBuYW1lID0gdHJhY2submFtZS5yZXBsYWNlKC9cXHMrLywgJysnKTtcblx0XHRsZXQgYXJ0aXN0ID0gdHJhY2suYXJ0aXN0LnJlcGxhY2UoL1xccysvLCAnKycpO1xuXHRcdGxldCBzcG90aWZ5VXJpID0gYHNwb3RpZnk6c2VhcmNoOiR7YXJ0aXN0fSUyMCR7bmFtZX1gO1xuXHRcdGxldCB5b3V0dWJlVXJpID0gYGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3Jlc3VsdHM/c2VhcmNoX3F1ZXJ5PSR7YXJ0aXN0fSstKyR7bmFtZX1gO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3M9XCJUcmFja1wiIG9uQ2xpY2s9e3RoaXMudG9nZ2xlTGlua3MuYmluZCh0aGlzKX0+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJUcmFjay1pbWFnZVwiIHN0eWxlPXtzdHlsZX0+XG5cdFx0XHRcdFx0PGltZyBzcmM9e3RyYWNrLmltYWdlfSB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjMwMFwiIC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiVHJhY2staW5mb1wiPlxuXHRcdFx0XHRcdDxoMiBjbGFzcz1cIlRyYWNrLXRpdGxlXCI+e3RyYWNrLm5hbWV9PC9oMj5cblx0XHRcdFx0XHQ8cCBjbGFzcz1cIlRyYWNrLWFydGlzdFwiPnt0cmFjay5hcnRpc3R9PC9wPlxuXHRcdFx0XHRcdDxzbWFsbCBjbGFzcz1cIlRyYWNrLWRhdGVcIj57dHJhY2sudGltZX08L3NtYWxsPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiVHJhY2stbGlua3NcIiBhcmlhLWhpZGRlbj17IXRoaXMuc3RhdGUuc2hvd0xpbmtzfT5cblx0XHRcdFx0XHRcdDxhXG5cdFx0XHRcdFx0XHRcdGhyZWY9e3Nwb3RpZnlVcml9XG5cdFx0XHRcdFx0XHRcdGNsYXNzPVwiVHJhY2stbGluayBUcmFjay1saW5rLS1zcG90aWZ5XCJcblx0XHRcdFx0XHRcdFx0dGFyZ2V0PVwiX2JsYW5rXCJcblx0XHRcdFx0XHRcdFx0dGl0bGU9XCJTZWFyY2ggZm9yIHRoaXMgdHJhY2sgb24gU3BvdGlmeVwiXG5cdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdDxJY29uLlNwb3RpZnkgLz5cblx0XHRcdFx0XHRcdDwvYT5cblx0XHRcdFx0XHRcdDxhXG5cdFx0XHRcdFx0XHRcdGhyZWY9e3lvdXR1YmVVcml9XG5cdFx0XHRcdFx0XHRcdGNsYXNzPVwiVHJhY2stbGluayBUcmFjay1saW5rLS15b3V0dWJlXCJcblx0XHRcdFx0XHRcdFx0dGFyZ2V0PVwiX2JsYW5rXCJcblx0XHRcdFx0XHRcdFx0dGl0bGU9XCJTZWFyY2ggZm9yIHRoaXMgdHJhY2sgb24gWW91VHViZVwiXG5cdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdDxJY29uLllvdXR1YmUgLz5cblx0XHRcdFx0XHRcdDwvYT5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyYWNrO1xuIl0sImZpbGUiOiJjb21wb25lbnRzL1RyYWNrLmpzIn0=