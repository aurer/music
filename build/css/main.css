.u-visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }
  .u-visuallyHidden.focusable:active, .u-visuallyHidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto; }

.u-left {
  float: left; }

.u-right {
  float: right; }

.u-clearFix:after {
  content: " ";
  display: table;
  clear: both; }

* {
  box-sizing: border-box; }

html {
  height: 100%;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  height: 100%;
  margin: 0;
  line-height: 1.5;
  background-color: #272e35;
  color: #e3e6e8; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent;
  color: #74eb41; }
  a:active, a:hover {
    outline: 0; }

ul,
ol,
dl {
  margin-top: 0;
  margin-bottom: 1.5rem; }

ul,
ol {
  padding-left: 1.5rem; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

ol ol {
  list-style: lower-alpha; }
  ol ol ol {
    list-style: lower-roman; }

img {
  border: 0;
  max-width: 100%;
  height: auto; }

svg:not(:root) {
  overflow: hidden; }

h1,
h2,
h3,
h4,
p {
  margin-top: 0;
  margin-bottom: 1.5rem; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

h1 {
  font-size: 2.6em; }

h2 {
  font-size: 2em; }

h3 {
  font-size: 1.6em; }

h4 {
  font-size: 1.3em; }

small {
  font-size: 80%; }

.Button {
  display: inline-block;
  padding: 0.3rem 1.5rem;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 0.75rem;
  letter-spacing: 0.05rem;
  font-weight: bold;
  background-color: #74eb41;
  color: #171a1c;
  border: none;
  border-radius: 3px;
  outline: none;
  cursor: pointer;
  transition: all 0.2s; }
  .Button[disabled] {
    opacity: 0.5; }
  .Button:hover, .Button:focus {
    background-color: #4a5968; }

.Tracks {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  grid-gap: 1rem 1rem;
  padding: 0.75rem; }
  @media (min-width: 36em) {
    .Tracks {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      grid-gap: 2rem;
      padding: 1.5rem; } }
  @media (min-width: 52em) {
    .Tracks {
      grid-gap: 4rem; } }

.Track {
  display: grid;
  grid-template-rows: auto 5rem;
  grid-row-gap: .8rem;
  justify-content: center; }
  .Track-image img {
    display: block;
    max-width: 100%;
    margin: auto;
    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.1); }
  .Track-info {
    max-width: 300px;
    font-size: .9rem; }
  .Track-title {
    font-size: 1em;
    margin: 0 0 .5rem; }
  .Track-artist {
    margin: 0 0 .3rem; }
  .Track-date {
    opacity: .5; }

.Track--placeholder {
  display: block; }
  .Track--placeholder .Track-image,
  .Track--placeholder .Track-title,
  .Track--placeholder .Track-artist {
    background-color: #eee; }
  .Track--placeholder .Track-image {
    margin-bottom: 1rem; }
    .Track--placeholder .Track-image:after {
      content: '';
      display: block;
      width: 100%;
      max-width: 300px;
      height: 0;
      padding-top: 100%; }
  .Track--placeholder .Track-info {
    height: 6rem; }
  .Track--placeholder .Track-title:after {
    content: '';
    display: inline-block; }
  .Track--placeholder .Track-artist {
    width: 80%; }
    .Track--placeholder .Track-artist:after {
      content: '';
      display: inline-block; }

.Paging {
  position: sticky;
  top: 0;
  background-color: #13171b;
  color: #e3e6e8;
  top: 0;
  text-align: center;
  padding: 0.75rem 1.5rem;
  display: flex;
  flex-direction: row;
  justify-content: space-between; }
  .Paging .Paging-prev {
    order: -1; }
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
